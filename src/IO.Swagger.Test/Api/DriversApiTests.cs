/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DriversApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DriversApiTests
    {
        private DriversApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DriversApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DriversApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DriversApi
            //Assert.IsInstanceOfType(typeof(DriversApi), instance, "instance is a DriversApi");
        }

        
        /// <summary>
        /// Test AddDriverNotificationToken
        /// </summary>
        [Test]
        public void AddDriverNotificationTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateDriverNotificationToken updateDriverToken = null;
            //instance.AddDriverNotificationToken(updateDriverToken);
            
        }
        
        /// <summary>
        /// Test DeleteDriverProfileImage
        /// </summary>
        [Test]
        public void DeleteDriverProfileImageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteDriverProfileImage();
            
        }
        
        /// <summary>
        /// Test DriverLogin
        /// </summary>
        [Test]
        public void DriverLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DriverLoginModel driverLoginModel = null;
            //instance.DriverLogin(driverLoginModel);
            
        }
        
        /// <summary>
        /// Test DriverRequestLoginCodeSms
        /// </summary>
        [Test]
        public void DriverRequestLoginCodeSmsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DriverRequestLoginPinModel driverRequestLoginPinModel = null;
            //instance.DriverRequestLoginCodeSms(driverRequestLoginPinModel);
            
        }
        
        /// <summary>
        /// Test GetDriverProfile
        /// </summary>
        [Test]
        public void GetDriverProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetDriverProfile();
            //Assert.IsInstanceOf<RestApiResultDriver> (response, "response is RestApiResultDriver");
        }
        
        /// <summary>
        /// Test GetStoresForDriver
        /// </summary>
        [Test]
        public void GetStoresForDriverTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetStoresForDriver();
            //Assert.IsInstanceOf<RestApiArrayResultDriverStore> (response, "response is RestApiArrayResultDriverStore");
        }
        
        /// <summary>
        /// Test RemoveDriverNotificationToken
        /// </summary>
        [Test]
        public void RemoveDriverNotificationTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateDriverNotificationToken removeDriverToken = null;
            //instance.RemoveDriverNotificationToken(removeDriverToken);
            
        }
        
        /// <summary>
        /// Test SetDriverPresenceForStore
        /// </summary>
        [Test]
        public void SetDriverPresenceForStoreTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? storeId = null;
            //string presence = null;
            //instance.SetDriverPresenceForStore(storeId, presence);
            
        }
        
        /// <summary>
        /// Test SetDriverProfileImage
        /// </summary>
        [Test]
        public void SetDriverProfileImageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SetDriverProfileImage();
            //Assert.IsInstanceOf<RestApiStringResult> (response, "response is RestApiStringResult");
        }
        
        /// <summary>
        /// Test UpdateDeliveryTrackingStatus
        /// </summary>
        [Test]
        public void UpdateDeliveryTrackingStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? orderId = null;
            //string deliveryTrackingStatus = null;
            //var response = instance.UpdateDeliveryTrackingStatus(orderId, deliveryTrackingStatus);
            //Assert.IsInstanceOf<RestApiStringResult> (response, "response is RestApiStringResult");
        }
        
        /// <summary>
        /// Test UpdateDriverProfile
        /// </summary>
        [Test]
        public void UpdateDriverProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateDriverProfileModel updateDriverProfile = null;
            //instance.UpdateDriverProfile(updateDriverProfile);
            
        }
        
    }

}
