/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing MobileAppsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MobileAppsApiTests
    {
        private MobileAppsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MobileAppsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MobileAppsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MobileAppsApi
            //Assert.IsInstanceOfType(typeof(MobileAppsApi), instance, "instance is a MobileAppsApi");
        }

        
        /// <summary>
        /// Test GetAppConfigSalesChannel
        /// </summary>
        [Test]
        public void GetAppConfigSalesChannelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //var response = instance.GetAppConfigSalesChannel(appId);
            //Assert.IsInstanceOf<RestApiResultAppConfigSalesChannel> (response, "response is RestApiResultAppConfigSalesChannel");
        }
        
        /// <summary>
        /// Test GetStatistics
        /// </summary>
        [Test]
        public void GetStatisticsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //List<string> platformTypes = null;
            //var response = instance.GetStatistics(appId, platformTypes);
            //Assert.IsInstanceOf<RestApiArrayResultMobileAppsStatistics> (response, "response is RestApiArrayResultMobileAppsStatistics");
        }
        
        /// <summary>
        /// Test GetSubmissionDetails
        /// </summary>
        [Test]
        public void GetSubmissionDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //var response = instance.GetSubmissionDetails(appId);
            //Assert.IsInstanceOf<RestApiResultMobileAppsSubmissionDetails> (response, "response is RestApiResultMobileAppsSubmissionDetails");
        }
        
        /// <summary>
        /// Test GetSubmissionStatus
        /// </summary>
        [Test]
        public void GetSubmissionStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //int? mobileAppsSubmissionId = null;
            //var response = instance.GetSubmissionStatus(appId, mobileAppsSubmissionId);
            //Assert.IsInstanceOf<RestApiResultMobileAppsSubmissionStatus> (response, "response is RestApiResultMobileAppsSubmissionStatus");
        }
        
        /// <summary>
        /// Test Submission
        /// </summary>
        [Test]
        public void SubmissionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //MobileAppsSubmission mobileAppsSubmission = null;
            //var response = instance.Submission(appId, mobileAppsSubmission);
            //Assert.IsInstanceOf<RestApiResultMobileAppsSubmission> (response, "response is RestApiResultMobileAppsSubmission");
        }
        
        /// <summary>
        /// Test UpdateAppConfigSalesChannel
        /// </summary>
        [Test]
        public void UpdateAppConfigSalesChannelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //AppConfigSalesChannel appConfigSalesChannel = null;
            //var response = instance.UpdateAppConfigSalesChannel(appId, appConfigSalesChannel);
            //Assert.IsInstanceOf<RestApiResultAppConfigSalesChannel> (response, "response is RestApiResultAppConfigSalesChannel");
        }
        
        /// <summary>
        /// Test UpdateSubmissionStatus
        /// </summary>
        [Test]
        public void UpdateSubmissionStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //int? mobileAppsSubmissionId = null;
            //UpdateMobileAppsSubmissionStatus updateMobileAppsSubmissionStatus = null;
            //var response = instance.UpdateSubmissionStatus(appId, mobileAppsSubmissionId, updateMobileAppsSubmissionStatus);
            //Assert.IsInstanceOf<RestApiResultUpdateMobileAppsSubmissionStatus> (response, "response is RestApiResultUpdateMobileAppsSubmissionStatus");
        }
        
        /// <summary>
        /// Test UploadImage
        /// </summary>
        [Test]
        public void UploadImageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //System.IO.Stream image = null;
            //var response = instance.UploadImage(appId, image);
            //Assert.IsInstanceOf<RestApiResultMobileAppsImage> (response, "response is RestApiResultMobileAppsImage");
        }
        
    }

}
