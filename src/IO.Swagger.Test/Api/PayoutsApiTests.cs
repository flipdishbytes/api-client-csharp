/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing PayoutsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PayoutsApiTests
    {
        private PayoutsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PayoutsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PayoutsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PayoutsApi
            //Assert.IsInstanceOfType(typeof(PayoutsApi), instance, "instance is a PayoutsApi");
        }

        
        /// <summary>
        /// Test GetPayout
        /// </summary>
        [Test]
        public void GetPayoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //int? bankAccountId = null;
            //int? payoutId = null;
            //var response = instance.GetPayout(appId, bankAccountId, payoutId);
            //Assert.IsInstanceOf<PayoutDetail> (response, "response is PayoutDetail");
        }
        
        /// <summary>
        /// Test GetPayoutChargebacks
        /// </summary>
        [Test]
        public void GetPayoutChargebacksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //int? bankAccountId = null;
            //int? payoutId = null;
            //int? page = null;
            //int? limit = null;
            //List<int?> storeIds = null;
            //var response = instance.GetPayoutChargebacks(appId, bankAccountId, payoutId, page, limit, storeIds);
            //Assert.IsInstanceOf<RestApiPaginationResultPayoutChargeback> (response, "response is RestApiPaginationResultPayoutChargeback");
        }
        
        /// <summary>
        /// Test GetPayoutOrders
        /// </summary>
        [Test]
        public void GetPayoutOrdersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //int? bankAccountId = null;
            //int? payoutId = null;
            //int? page = null;
            //int? limit = null;
            //List<int?> storeIds = null;
            //var response = instance.GetPayoutOrders(appId, bankAccountId, payoutId, page, limit, storeIds);
            //Assert.IsInstanceOf<RestApiPaginationResultPayoutOrder> (response, "response is RestApiPaginationResultPayoutOrder");
        }
        
        /// <summary>
        /// Test GetPayoutOtherCharges
        /// </summary>
        [Test]
        public void GetPayoutOtherChargesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //int? bankAccountId = null;
            //int? payoutId = null;
            //int? page = null;
            //int? limit = null;
            //List<int?> storeIds = null;
            //var response = instance.GetPayoutOtherCharges(appId, bankAccountId, payoutId, page, limit, storeIds);
            //Assert.IsInstanceOf<RestApiPaginationResultPayoutOtherCharge> (response, "response is RestApiPaginationResultPayoutOtherCharge");
        }
        
        /// <summary>
        /// Test GetPayoutRefunds
        /// </summary>
        [Test]
        public void GetPayoutRefundsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //int? bankAccountId = null;
            //int? payoutId = null;
            //int? page = null;
            //int? limit = null;
            //List<int?> storeIds = null;
            //var response = instance.GetPayoutRefunds(appId, bankAccountId, payoutId, page, limit, storeIds);
            //Assert.IsInstanceOf<RestApiPaginationResultPayoutRefund> (response, "response is RestApiPaginationResultPayoutRefund");
        }
        
        /// <summary>
        /// Test GetPayoutSummaries
        /// </summary>
        [Test]
        public void GetPayoutSummariesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //List<int?> payoutRequestIdsBankAccountIds = null;
            //List<string> payoutRequestIdsStates = null;
            //var response = instance.GetPayoutSummaries(appId, startDate, endDate, payoutRequestIdsBankAccountIds, payoutRequestIdsStates);
            //Assert.IsInstanceOf<RestApiArrayResultPayoutSummary> (response, "response is RestApiArrayResultPayoutSummary");
        }
        
        /// <summary>
        /// Test GetPayouts
        /// </summary>
        [Test]
        public void GetPayoutsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //int? page = null;
            //int? limit = null;
            //List<int?> payoutRequestIdsBankAccountIds = null;
            //List<string> payoutRequestIdsStates = null;
            //var response = instance.GetPayouts(appId, startDate, endDate, page, limit, payoutRequestIdsBankAccountIds, payoutRequestIdsStates);
            //Assert.IsInstanceOf<RestApiPaginationResultPayout> (response, "response is RestApiPaginationResultPayout");
        }
        
    }

}
