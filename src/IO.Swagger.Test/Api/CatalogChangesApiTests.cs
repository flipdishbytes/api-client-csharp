/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CatalogChangesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CatalogChangesApiTests
    {
        private CatalogChangesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CatalogChangesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CatalogChangesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CatalogChangesApi
            //Assert.IsInstanceOfType(typeof(CatalogChangesApi), instance, "instance is a CatalogChangesApi");
        }

        
        /// <summary>
        /// Test GetPendingMenuChanges
        /// </summary>
        [Test]
        public void GetPendingMenuChangesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //int? menuId = null;
            //string catalogItemId = null;
            //int? page = null;
            //int? limit = null;
            //var response = instance.GetPendingMenuChanges(appId, menuId, catalogItemId, page, limit);
            //Assert.IsInstanceOf<RestApiPaginationResultPendingMenuChanges> (response, "response is RestApiPaginationResultPendingMenuChanges");
        }
        
        /// <summary>
        /// Test GetPendingMenuChangesSummaries
        /// </summary>
        [Test]
        public void GetPendingMenuChangesSummariesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //var response = instance.GetPendingMenuChangesSummaries(appId);
            //Assert.IsInstanceOf<RestApiArrayResultPendingMenuChangesSummaries> (response, "response is RestApiArrayResultPendingMenuChangesSummaries");
        }
        
        /// <summary>
        /// Test PublishPendingMenuChanges
        /// </summary>
        [Test]
        public void PublishPendingMenuChangesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //PublishMenuChanges publishMenuChanges = null;
            //instance.PublishPendingMenuChanges(appId, publishMenuChanges);
            
        }
        
    }

}
