/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CampaignsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CampaignsApiTests
    {
        private CampaignsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CampaignsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CampaignsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CampaignsApi
            //Assert.IsInstanceOfType(typeof(CampaignsApi), instance, "instance is a CampaignsApi");
        }

        
        /// <summary>
        /// Test CreateLoyaltyCampaign
        /// </summary>
        [Test]
        public void CreateLoyaltyCampaignTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //LoyaltyCampaignBase campaign = null;
            //var response = instance.CreateLoyaltyCampaign(appId, campaign);
            //Assert.IsInstanceOf<RestApiResultLoyaltyCampaign> (response, "response is RestApiResultLoyaltyCampaign");
        }
        
        /// <summary>
        /// Test CreateRetentionCampaign
        /// </summary>
        [Test]
        public void CreateRetentionCampaignTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //RetentionCampaignBase campaign = null;
            //var response = instance.CreateRetentionCampaign(appId, campaign);
            //Assert.IsInstanceOf<RestApiResultRetentionCampaign> (response, "response is RestApiResultRetentionCampaign");
        }
        
        /// <summary>
        /// Test GetLoyaltyCampaignsForApp
        /// </summary>
        [Test]
        public void GetLoyaltyCampaignsForAppTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //var response = instance.GetLoyaltyCampaignsForApp(appId);
            //Assert.IsInstanceOf<RestApiArrayResultLoyaltyCampaign> (response, "response is RestApiArrayResultLoyaltyCampaign");
        }
        
        /// <summary>
        /// Test GetLoyaltyCampaignsForStore
        /// </summary>
        [Test]
        public void GetLoyaltyCampaignsForStoreTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //int? storeId = null;
            //var response = instance.GetLoyaltyCampaignsForStore(appId, storeId);
            //Assert.IsInstanceOf<RestApiArrayResultLoyaltyCampaign> (response, "response is RestApiArrayResultLoyaltyCampaign");
        }
        
        /// <summary>
        /// Test GetRetentionCampaignsForApp
        /// </summary>
        [Test]
        public void GetRetentionCampaignsForAppTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //var response = instance.GetRetentionCampaignsForApp(appId);
            //Assert.IsInstanceOf<RestApiArrayResultRetentionCampaign> (response, "response is RestApiArrayResultRetentionCampaign");
        }
        
        /// <summary>
        /// Test GetRetentionCampaignsForStore
        /// </summary>
        [Test]
        public void GetRetentionCampaignsForStoreTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //int? storeId = null;
            //var response = instance.GetRetentionCampaignsForStore(appId, storeId);
            //Assert.IsInstanceOf<RestApiArrayResultRetentionCampaign> (response, "response is RestApiArrayResultRetentionCampaign");
        }
        
        /// <summary>
        /// Test GetStoreList
        /// </summary>
        [Test]
        public void GetStoreListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //var response = instance.GetStoreList(appId);
            //Assert.IsInstanceOf<RestApiArrayResultStoreListItem> (response, "response is RestApiArrayResultStoreListItem");
        }
        
        /// <summary>
        /// Test RemoveCampaign
        /// </summary>
        [Test]
        public void RemoveCampaignTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //int? campaignId = null;
            //instance.RemoveCampaign(appId, campaignId);
            
        }
        
        /// <summary>
        /// Test UpdateLoyaltyCampaign
        /// </summary>
        [Test]
        public void UpdateLoyaltyCampaignTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //int? campaignId = null;
            //LoyaltyCampaignBase campaign = null;
            //var response = instance.UpdateLoyaltyCampaign(appId, campaignId, campaign);
            //Assert.IsInstanceOf<RestApiResultLoyaltyCampaign> (response, "response is RestApiResultLoyaltyCampaign");
        }
        
        /// <summary>
        /// Test UpdateRetentionCampaign
        /// </summary>
        [Test]
        public void UpdateRetentionCampaignTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //int? campaignId = null;
            //RetentionCampaignBase campaign = null;
            //var response = instance.UpdateRetentionCampaign(appId, campaignId, campaign);
            //Assert.IsInstanceOf<RestApiResultRetentionCampaign> (response, "response is RestApiResultRetentionCampaign");
        }
        
    }

}
