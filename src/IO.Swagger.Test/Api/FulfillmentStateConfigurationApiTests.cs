/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing FulfillmentStateConfigurationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class FulfillmentStateConfigurationApiTests
    {
        private FulfillmentStateConfigurationApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new FulfillmentStateConfigurationApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FulfillmentStateConfigurationApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' FulfillmentStateConfigurationApi
            //Assert.IsInstanceOfType(typeof(FulfillmentStateConfigurationApi), instance, "instance is a FulfillmentStateConfigurationApi");
        }

        
        /// <summary>
        /// Test CreateFulfillmentStatesConfig
        /// </summary>
        [Test]
        public void CreateFulfillmentStatesConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //FulfillmentStatesConfigurationCreateBase fulfillmentStateConfiguration = null;
            //var response = instance.CreateFulfillmentStatesConfig(appId, fulfillmentStateConfiguration);
            //Assert.IsInstanceOf<RestApiResultFulfillmentStatesConfiguration> (response, "response is RestApiResultFulfillmentStatesConfiguration");
        }
        
        /// <summary>
        /// Test DeleteFulfillmentStatesConfig
        /// </summary>
        [Test]
        public void DeleteFulfillmentStatesConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //string configId = null;
            //var response = instance.DeleteFulfillmentStatesConfig(appId, configId);
            //Assert.IsInstanceOf<RestApiStringResult> (response, "response is RestApiStringResult");
        }
        
        /// <summary>
        /// Test GetFulfillmentStatesConfiguration
        /// </summary>
        [Test]
        public void GetFulfillmentStatesConfigurationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //string configId = null;
            //var response = instance.GetFulfillmentStatesConfiguration(appId, configId);
            //Assert.IsInstanceOf<FulfillmentStatesConfiguration> (response, "response is FulfillmentStatesConfiguration");
        }
        
        /// <summary>
        /// Test SearchFulfillmentStatesConfigurations
        /// </summary>
        [Test]
        public void SearchFulfillmentStatesConfigurationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //var response = instance.SearchFulfillmentStatesConfigurations(appId);
            //Assert.IsInstanceOf<RestApiArrayResultFulfillmentStatesConfigurationSummary> (response, "response is RestApiArrayResultFulfillmentStatesConfigurationSummary");
        }
        
        /// <summary>
        /// Test UpdateFulfillmentStatesConfig
        /// </summary>
        [Test]
        public void UpdateFulfillmentStatesConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //string configId = null;
            //UpdateFulfillmentStatesConfiguration updateFulfillmentStatesConfiguration = null;
            //instance.UpdateFulfillmentStatesConfig(appId, configId, updateFulfillmentStatesConfiguration);
            
        }
        
    }

}
