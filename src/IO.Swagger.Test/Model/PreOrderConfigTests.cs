/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing PreOrderConfig
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class PreOrderConfigTests
    {
        // TODO uncomment below to declare an instance variable for PreOrderConfig
        //private PreOrderConfig instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of PreOrderConfig
            //instance = new PreOrderConfig();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PreOrderConfig
        /// </summary>
        [Test]
        public void PreOrderConfigInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" PreOrderConfig
            //Assert.IsInstanceOfType<PreOrderConfig> (instance, "variable 'instance' is a PreOrderConfig");
        }


        /// <summary>
        /// Test the property 'LeadTimeMinutes'
        /// </summary>
        [Test]
        public void LeadTimeMinutesTest()
        {
            // TODO unit test for the property 'LeadTimeMinutes'
        }
        /// <summary>
        /// Test the property 'IntervalMinutes'
        /// </summary>
        [Test]
        public void IntervalMinutesTest()
        {
            // TODO unit test for the property 'IntervalMinutes'
        }
        /// <summary>
        /// Test the property 'MaxOrderAheadDays'
        /// </summary>
        [Test]
        public void MaxOrderAheadDaysTest()
        {
            // TODO unit test for the property 'MaxOrderAheadDays'
        }
        /// <summary>
        /// Test the property 'IncludeAsap'
        /// </summary>
        [Test]
        public void IncludeAsapTest()
        {
            // TODO unit test for the property 'IncludeAsap'
        }
        /// <summary>
        /// Test the property 'IncludeMoreGranularInitialTime'
        /// </summary>
        [Test]
        public void IncludeMoreGranularInitialTimeTest()
        {
            // TODO unit test for the property 'IncludeMoreGranularInitialTime'
        }
        /// <summary>
        /// Test the property 'CutOffTimePreviousDayBasic'
        /// </summary>
        [Test]
        public void CutOffTimePreviousDayBasicTest()
        {
            // TODO unit test for the property 'CutOffTimePreviousDayBasic'
        }
        /// <summary>
        /// Test the property 'CutOffTimeCurrentDayBasic'
        /// </summary>
        [Test]
        public void CutOffTimeCurrentDayBasicTest()
        {
            // TODO unit test for the property 'CutOffTimeCurrentDayBasic'
        }
        /// <summary>
        /// Test the property 'PreOrderTimeDisplayType'
        /// </summary>
        [Test]
        public void PreOrderTimeDisplayTypeTest()
        {
            // TODO unit test for the property 'PreOrderTimeDisplayType'
        }
        /// <summary>
        /// Test the property 'AlwaysAppearOpen'
        /// </summary>
        [Test]
        public void AlwaysAppearOpenTest()
        {
            // TODO unit test for the property 'AlwaysAppearOpen'
        }
        /// <summary>
        /// Test the property 'RequireExplicitSelectAlways'
        /// </summary>
        [Test]
        public void RequireExplicitSelectAlwaysTest()
        {
            // TODO unit test for the property 'RequireExplicitSelectAlways'
        }

    }

}
