/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// Describes the configuration of OrderBatching
    /// </summary>
    [DataContract]
    public partial class OrderBatchingConfiguration :  IEquatable<OrderBatchingConfiguration>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderBatchingConfiguration" /> class.
        /// </summary>
        /// <param name="batchIntervalInMinutes">Batch sending interval in minutes.</param>
        /// <param name="isEnabled">OrderBatching is enabled or not.</param>
        public OrderBatchingConfiguration(int? batchIntervalInMinutes = default(int?), bool? isEnabled = default(bool?))
        {
            this.BatchIntervalInMinutes = batchIntervalInMinutes;
            this.IsEnabled = isEnabled;
        }
        
        /// <summary>
        /// Batch sending interval in minutes
        /// </summary>
        /// <value>Batch sending interval in minutes</value>
        [DataMember(Name="BatchIntervalInMinutes", EmitDefaultValue=false)]
        public int? BatchIntervalInMinutes { get; set; }

        /// <summary>
        /// OrderBatching is enabled or not
        /// </summary>
        /// <value>OrderBatching is enabled or not</value>
        [DataMember(Name="IsEnabled", EmitDefaultValue=false)]
        public bool? IsEnabled { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrderBatchingConfiguration {\n");
            sb.Append("  BatchIntervalInMinutes: ").Append(BatchIntervalInMinutes).Append("\n");
            sb.Append("  IsEnabled: ").Append(IsEnabled).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderBatchingConfiguration);
        }

        /// <summary>
        /// Returns true if OrderBatchingConfiguration instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderBatchingConfiguration to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderBatchingConfiguration input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.BatchIntervalInMinutes == input.BatchIntervalInMinutes ||
                    (this.BatchIntervalInMinutes != null &&
                    this.BatchIntervalInMinutes.Equals(input.BatchIntervalInMinutes))
                ) && 
                (
                    this.IsEnabled == input.IsEnabled ||
                    (this.IsEnabled != null &&
                    this.IsEnabled.Equals(input.IsEnabled))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BatchIntervalInMinutes != null)
                    hashCode = hashCode * 59 + this.BatchIntervalInMinutes.GetHashCode();
                if (this.IsEnabled != null)
                    hashCode = hashCode * 59 + this.IsEnabled.GetHashCode();
                return hashCode;
            }
        }
    }

}
