/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// Phone call
    /// </summary>
    [DataContract]
    public partial class TelephonyConfig :  IEquatable<TelephonyConfig>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TelephonyConfig" /> class.
        /// </summary>
        /// <param name="telephonyConfigId">ID of the phone call.</param>
        /// <param name="apmEnabled">APM enabled flag.</param>
        /// <param name="consentEnabled">Consent enabled flag.</param>
        /// <param name="phoneNumber">APM phone number of the store.</param>
        /// <param name="sendAppLinkSms">Send app link SMS flag.</param>
        /// <param name="useCustomAppLinkSmsMessage">Use custom app link SMS message flag.</param>
        /// <param name="useCustomVoiceMessage">Use custom voice message flag.</param>
        /// <param name="appLinkSmsMessage">App link SMS message.</param>
        /// <param name="resendApmMessageAfterDays">Amount of days to resend APM message.</param>
        public TelephonyConfig(int? telephonyConfigId = default(int?), bool? apmEnabled = default(bool?), bool? consentEnabled = default(bool?), string phoneNumber = default(string), bool? sendAppLinkSms = default(bool?), bool? useCustomAppLinkSmsMessage = default(bool?), bool? useCustomVoiceMessage = default(bool?), string appLinkSmsMessage = default(string), int? resendApmMessageAfterDays = default(int?))
        {
            this.TelephonyConfigId = telephonyConfigId;
            this.ApmEnabled = apmEnabled;
            this.ConsentEnabled = consentEnabled;
            this.PhoneNumber = phoneNumber;
            this.SendAppLinkSms = sendAppLinkSms;
            this.UseCustomAppLinkSmsMessage = useCustomAppLinkSmsMessage;
            this.UseCustomVoiceMessage = useCustomVoiceMessage;
            this.AppLinkSmsMessage = appLinkSmsMessage;
            this.ResendApmMessageAfterDays = resendApmMessageAfterDays;
        }
        
        /// <summary>
        /// ID of the phone call
        /// </summary>
        /// <value>ID of the phone call</value>
        [DataMember(Name="TelephonyConfigId", EmitDefaultValue=false)]
        public int? TelephonyConfigId { get; set; }

        /// <summary>
        /// APM enabled flag
        /// </summary>
        /// <value>APM enabled flag</value>
        [DataMember(Name="ApmEnabled", EmitDefaultValue=false)]
        public bool? ApmEnabled { get; set; }

        /// <summary>
        /// Consent enabled flag
        /// </summary>
        /// <value>Consent enabled flag</value>
        [DataMember(Name="ConsentEnabled", EmitDefaultValue=false)]
        public bool? ConsentEnabled { get; set; }

        /// <summary>
        /// APM phone number of the store
        /// </summary>
        /// <value>APM phone number of the store</value>
        [DataMember(Name="PhoneNumber", EmitDefaultValue=false)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Send app link SMS flag
        /// </summary>
        /// <value>Send app link SMS flag</value>
        [DataMember(Name="SendAppLinkSms", EmitDefaultValue=false)]
        public bool? SendAppLinkSms { get; set; }

        /// <summary>
        /// Use custom app link SMS message flag
        /// </summary>
        /// <value>Use custom app link SMS message flag</value>
        [DataMember(Name="UseCustomAppLinkSmsMessage", EmitDefaultValue=false)]
        public bool? UseCustomAppLinkSmsMessage { get; set; }

        /// <summary>
        /// Use custom voice message flag
        /// </summary>
        /// <value>Use custom voice message flag</value>
        [DataMember(Name="UseCustomVoiceMessage", EmitDefaultValue=false)]
        public bool? UseCustomVoiceMessage { get; set; }

        /// <summary>
        /// App link SMS message
        /// </summary>
        /// <value>App link SMS message</value>
        [DataMember(Name="AppLinkSmsMessage", EmitDefaultValue=false)]
        public string AppLinkSmsMessage { get; set; }

        /// <summary>
        /// Amount of days to resend APM message
        /// </summary>
        /// <value>Amount of days to resend APM message</value>
        [DataMember(Name="ResendApmMessageAfterDays", EmitDefaultValue=false)]
        public int? ResendApmMessageAfterDays { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TelephonyConfig {\n");
            sb.Append("  TelephonyConfigId: ").Append(TelephonyConfigId).Append("\n");
            sb.Append("  ApmEnabled: ").Append(ApmEnabled).Append("\n");
            sb.Append("  ConsentEnabled: ").Append(ConsentEnabled).Append("\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  SendAppLinkSms: ").Append(SendAppLinkSms).Append("\n");
            sb.Append("  UseCustomAppLinkSmsMessage: ").Append(UseCustomAppLinkSmsMessage).Append("\n");
            sb.Append("  UseCustomVoiceMessage: ").Append(UseCustomVoiceMessage).Append("\n");
            sb.Append("  AppLinkSmsMessage: ").Append(AppLinkSmsMessage).Append("\n");
            sb.Append("  ResendApmMessageAfterDays: ").Append(ResendApmMessageAfterDays).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TelephonyConfig);
        }

        /// <summary>
        /// Returns true if TelephonyConfig instances are equal
        /// </summary>
        /// <param name="input">Instance of TelephonyConfig to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TelephonyConfig input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TelephonyConfigId == input.TelephonyConfigId ||
                    (this.TelephonyConfigId != null &&
                    this.TelephonyConfigId.Equals(input.TelephonyConfigId))
                ) && 
                (
                    this.ApmEnabled == input.ApmEnabled ||
                    (this.ApmEnabled != null &&
                    this.ApmEnabled.Equals(input.ApmEnabled))
                ) && 
                (
                    this.ConsentEnabled == input.ConsentEnabled ||
                    (this.ConsentEnabled != null &&
                    this.ConsentEnabled.Equals(input.ConsentEnabled))
                ) && 
                (
                    this.PhoneNumber == input.PhoneNumber ||
                    (this.PhoneNumber != null &&
                    this.PhoneNumber.Equals(input.PhoneNumber))
                ) && 
                (
                    this.SendAppLinkSms == input.SendAppLinkSms ||
                    (this.SendAppLinkSms != null &&
                    this.SendAppLinkSms.Equals(input.SendAppLinkSms))
                ) && 
                (
                    this.UseCustomAppLinkSmsMessage == input.UseCustomAppLinkSmsMessage ||
                    (this.UseCustomAppLinkSmsMessage != null &&
                    this.UseCustomAppLinkSmsMessage.Equals(input.UseCustomAppLinkSmsMessage))
                ) && 
                (
                    this.UseCustomVoiceMessage == input.UseCustomVoiceMessage ||
                    (this.UseCustomVoiceMessage != null &&
                    this.UseCustomVoiceMessage.Equals(input.UseCustomVoiceMessage))
                ) && 
                (
                    this.AppLinkSmsMessage == input.AppLinkSmsMessage ||
                    (this.AppLinkSmsMessage != null &&
                    this.AppLinkSmsMessage.Equals(input.AppLinkSmsMessage))
                ) && 
                (
                    this.ResendApmMessageAfterDays == input.ResendApmMessageAfterDays ||
                    (this.ResendApmMessageAfterDays != null &&
                    this.ResendApmMessageAfterDays.Equals(input.ResendApmMessageAfterDays))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TelephonyConfigId != null)
                    hashCode = hashCode * 59 + this.TelephonyConfigId.GetHashCode();
                if (this.ApmEnabled != null)
                    hashCode = hashCode * 59 + this.ApmEnabled.GetHashCode();
                if (this.ConsentEnabled != null)
                    hashCode = hashCode * 59 + this.ConsentEnabled.GetHashCode();
                if (this.PhoneNumber != null)
                    hashCode = hashCode * 59 + this.PhoneNumber.GetHashCode();
                if (this.SendAppLinkSms != null)
                    hashCode = hashCode * 59 + this.SendAppLinkSms.GetHashCode();
                if (this.UseCustomAppLinkSmsMessage != null)
                    hashCode = hashCode * 59 + this.UseCustomAppLinkSmsMessage.GetHashCode();
                if (this.UseCustomVoiceMessage != null)
                    hashCode = hashCode * 59 + this.UseCustomVoiceMessage.GetHashCode();
                if (this.AppLinkSmsMessage != null)
                    hashCode = hashCode * 59 + this.AppLinkSmsMessage.GetHashCode();
                if (this.ResendApmMessageAfterDays != null)
                    hashCode = hashCode * 59 + this.ResendApmMessageAfterDays.GetHashCode();
                return hashCode;
            }
        }
    }

}
