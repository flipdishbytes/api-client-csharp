/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// MenuZone
    /// </summary>
    [DataContract]
    public partial class MenuZone :  IEquatable<MenuZone>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MenuZone" /> class.
        /// </summary>
        /// <param name="menuZoneId">menuZoneId.</param>
        /// <param name="menuId">menuId.</param>
        /// <param name="name">name.</param>
        /// <param name="description">description.</param>
        /// <param name="imageName">imageName.</param>
        /// <param name="displayOrder">displayOrder.</param>
        public MenuZone(int? menuZoneId = default(int?), int? menuId = default(int?), string name = default(string), string description = default(string), string imageName = default(string), int? displayOrder = default(int?))
        {
            this.MenuZoneId = menuZoneId;
            this.MenuId = menuId;
            this.Name = name;
            this.Description = description;
            this.ImageName = imageName;
            this.DisplayOrder = displayOrder;
        }
        
        /// <summary>
        /// Gets or Sets MenuZoneId
        /// </summary>
        [DataMember(Name="MenuZoneId", EmitDefaultValue=false)]
        public int? MenuZoneId { get; set; }

        /// <summary>
        /// Gets or Sets MenuId
        /// </summary>
        [DataMember(Name="MenuId", EmitDefaultValue=false)]
        public int? MenuId { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="Name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="Description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets ImageName
        /// </summary>
        [DataMember(Name="ImageName", EmitDefaultValue=false)]
        public string ImageName { get; set; }

        /// <summary>
        /// Gets or Sets DisplayOrder
        /// </summary>
        [DataMember(Name="DisplayOrder", EmitDefaultValue=false)]
        public int? DisplayOrder { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MenuZone {\n");
            sb.Append("  MenuZoneId: ").Append(MenuZoneId).Append("\n");
            sb.Append("  MenuId: ").Append(MenuId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ImageName: ").Append(ImageName).Append("\n");
            sb.Append("  DisplayOrder: ").Append(DisplayOrder).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MenuZone);
        }

        /// <summary>
        /// Returns true if MenuZone instances are equal
        /// </summary>
        /// <param name="input">Instance of MenuZone to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MenuZone input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MenuZoneId == input.MenuZoneId ||
                    (this.MenuZoneId != null &&
                    this.MenuZoneId.Equals(input.MenuZoneId))
                ) && 
                (
                    this.MenuId == input.MenuId ||
                    (this.MenuId != null &&
                    this.MenuId.Equals(input.MenuId))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.ImageName == input.ImageName ||
                    (this.ImageName != null &&
                    this.ImageName.Equals(input.ImageName))
                ) && 
                (
                    this.DisplayOrder == input.DisplayOrder ||
                    (this.DisplayOrder != null &&
                    this.DisplayOrder.Equals(input.DisplayOrder))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MenuZoneId != null)
                    hashCode = hashCode * 59 + this.MenuZoneId.GetHashCode();
                if (this.MenuId != null)
                    hashCode = hashCode * 59 + this.MenuId.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.ImageName != null)
                    hashCode = hashCode * 59 + this.ImageName.GetHashCode();
                if (this.DisplayOrder != null)
                    hashCode = hashCode * 59 + this.DisplayOrder.GetHashCode();
                return hashCode;
            }
        }
    }

}
