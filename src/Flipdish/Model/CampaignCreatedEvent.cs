/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// CampaignCreatedEvent
    /// </summary>
    [DataContract]
    public partial class CampaignCreatedEvent :  IEquatable<CampaignCreatedEvent>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CampaignCreatedEvent" /> class.
        /// </summary>
        /// <param name="EventName">The event name.</param>
        /// <param name="CampaignId">CampaignId.</param>
        /// <param name="VirtualRestaurantName">VirtualRestaurantName.</param>
        /// <param name="VirtualRestaurantId">VirtualRestaurantId.</param>
        /// <param name="FlipdishEventId">The identitfier of the event.</param>
        /// <param name="CreateTime">The time of creation of the event.</param>
        /// <param name="Position">Position.</param>
        public CampaignCreatedEvent(string EventName = default(string), int? CampaignId = default(int?), string VirtualRestaurantName = default(string), int? VirtualRestaurantId = default(int?), Guid? FlipdishEventId = default(Guid?), DateTime? CreateTime = default(DateTime?), int? Position = default(int?))
        {
            this.EventName = EventName;
            this.CampaignId = CampaignId;
            this.VirtualRestaurantName = VirtualRestaurantName;
            this.VirtualRestaurantId = VirtualRestaurantId;
            this.FlipdishEventId = FlipdishEventId;
            this.CreateTime = CreateTime;
            this.Position = Position;
        }
        
        /// <summary>
        /// The event name
        /// </summary>
        /// <value>The event name</value>
        [DataMember(Name="EventName", EmitDefaultValue=false)]
        public string EventName { get; set; }

        /// <summary>
        /// Gets or Sets CampaignId
        /// </summary>
        [DataMember(Name="CampaignId", EmitDefaultValue=false)]
        public int? CampaignId { get; set; }

        /// <summary>
        /// Gets or Sets VirtualRestaurantName
        /// </summary>
        [DataMember(Name="VirtualRestaurantName", EmitDefaultValue=false)]
        public string VirtualRestaurantName { get; set; }

        /// <summary>
        /// Gets or Sets VirtualRestaurantId
        /// </summary>
        [DataMember(Name="VirtualRestaurantId", EmitDefaultValue=false)]
        public int? VirtualRestaurantId { get; set; }

        /// <summary>
        /// The identitfier of the event
        /// </summary>
        /// <value>The identitfier of the event</value>
        [DataMember(Name="FlipdishEventId", EmitDefaultValue=false)]
        public Guid? FlipdishEventId { get; set; }

        /// <summary>
        /// The time of creation of the event
        /// </summary>
        /// <value>The time of creation of the event</value>
        [DataMember(Name="CreateTime", EmitDefaultValue=false)]
        public DateTime? CreateTime { get; set; }

        /// <summary>
        /// Position
        /// </summary>
        /// <value>Position</value>
        [DataMember(Name="Position", EmitDefaultValue=false)]
        public int? Position { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CampaignCreatedEvent {\n");
            sb.Append("  EventName: ").Append(EventName).Append("\n");
            sb.Append("  CampaignId: ").Append(CampaignId).Append("\n");
            sb.Append("  VirtualRestaurantName: ").Append(VirtualRestaurantName).Append("\n");
            sb.Append("  VirtualRestaurantId: ").Append(VirtualRestaurantId).Append("\n");
            sb.Append("  FlipdishEventId: ").Append(FlipdishEventId).Append("\n");
            sb.Append("  CreateTime: ").Append(CreateTime).Append("\n");
            sb.Append("  Position: ").Append(Position).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CampaignCreatedEvent);
        }

        /// <summary>
        /// Returns true if CampaignCreatedEvent instances are equal
        /// </summary>
        /// <param name="input">Instance of CampaignCreatedEvent to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CampaignCreatedEvent input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EventName == input.EventName ||
                    (this.EventName != null &&
                    this.EventName.Equals(input.EventName))
                ) && 
                (
                    this.CampaignId == input.CampaignId ||
                    (this.CampaignId != null &&
                    this.CampaignId.Equals(input.CampaignId))
                ) && 
                (
                    this.VirtualRestaurantName == input.VirtualRestaurantName ||
                    (this.VirtualRestaurantName != null &&
                    this.VirtualRestaurantName.Equals(input.VirtualRestaurantName))
                ) && 
                (
                    this.VirtualRestaurantId == input.VirtualRestaurantId ||
                    (this.VirtualRestaurantId != null &&
                    this.VirtualRestaurantId.Equals(input.VirtualRestaurantId))
                ) && 
                (
                    this.FlipdishEventId == input.FlipdishEventId ||
                    (this.FlipdishEventId != null &&
                    this.FlipdishEventId.Equals(input.FlipdishEventId))
                ) && 
                (
                    this.CreateTime == input.CreateTime ||
                    (this.CreateTime != null &&
                    this.CreateTime.Equals(input.CreateTime))
                ) && 
                (
                    this.Position == input.Position ||
                    (this.Position != null &&
                    this.Position.Equals(input.Position))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EventName != null)
                    hashCode = hashCode * 59 + this.EventName.GetHashCode();
                if (this.CampaignId != null)
                    hashCode = hashCode * 59 + this.CampaignId.GetHashCode();
                if (this.VirtualRestaurantName != null)
                    hashCode = hashCode * 59 + this.VirtualRestaurantName.GetHashCode();
                if (this.VirtualRestaurantId != null)
                    hashCode = hashCode * 59 + this.VirtualRestaurantId.GetHashCode();
                if (this.FlipdishEventId != null)
                    hashCode = hashCode * 59 + this.FlipdishEventId.GetHashCode();
                if (this.CreateTime != null)
                    hashCode = hashCode * 59 + this.CreateTime.GetHashCode();
                if (this.Position != null)
                    hashCode = hashCode * 59 + this.Position.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
