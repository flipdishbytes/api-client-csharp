/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// Breakdown of POS charges
    /// </summary>
    [DataContract]
    public partial class PosRevenueDetails :  IEquatable<PosRevenueDetails>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PosRevenueDetails" /> class.
        /// </summary>
        /// <param name="posSalesAmount">POS sale amount for the store.</param>
        /// <param name="posSalesTax">POS sale Tax for the store.</param>
        /// <param name="posSalesTips">POS sale tips for the store.</param>
        /// <param name="totalPosRevenue">POS Total Revenue for the store.</param>
        public PosRevenueDetails(double? posSalesAmount = default(double?), double? posSalesTax = default(double?), double? posSalesTips = default(double?), double? totalPosRevenue = default(double?))
        {
            this.PosSalesAmount = posSalesAmount;
            this.PosSalesTax = posSalesTax;
            this.PosSalesTips = posSalesTips;
            this.TotalPosRevenue = totalPosRevenue;
        }
        
        /// <summary>
        /// POS sale amount for the store
        /// </summary>
        /// <value>POS sale amount for the store</value>
        [DataMember(Name="PosSalesAmount", EmitDefaultValue=false)]
        public double? PosSalesAmount { get; set; }

        /// <summary>
        /// POS sale Tax for the store
        /// </summary>
        /// <value>POS sale Tax for the store</value>
        [DataMember(Name="PosSalesTax", EmitDefaultValue=false)]
        public double? PosSalesTax { get; set; }

        /// <summary>
        /// POS sale tips for the store
        /// </summary>
        /// <value>POS sale tips for the store</value>
        [DataMember(Name="PosSalesTips", EmitDefaultValue=false)]
        public double? PosSalesTips { get; set; }

        /// <summary>
        /// POS Total Revenue for the store
        /// </summary>
        /// <value>POS Total Revenue for the store</value>
        [DataMember(Name="TotalPosRevenue", EmitDefaultValue=false)]
        public double? TotalPosRevenue { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PosRevenueDetails {\n");
            sb.Append("  PosSalesAmount: ").Append(PosSalesAmount).Append("\n");
            sb.Append("  PosSalesTax: ").Append(PosSalesTax).Append("\n");
            sb.Append("  PosSalesTips: ").Append(PosSalesTips).Append("\n");
            sb.Append("  TotalPosRevenue: ").Append(TotalPosRevenue).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PosRevenueDetails);
        }

        /// <summary>
        /// Returns true if PosRevenueDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of PosRevenueDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PosRevenueDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PosSalesAmount == input.PosSalesAmount ||
                    (this.PosSalesAmount != null &&
                    this.PosSalesAmount.Equals(input.PosSalesAmount))
                ) && 
                (
                    this.PosSalesTax == input.PosSalesTax ||
                    (this.PosSalesTax != null &&
                    this.PosSalesTax.Equals(input.PosSalesTax))
                ) && 
                (
                    this.PosSalesTips == input.PosSalesTips ||
                    (this.PosSalesTips != null &&
                    this.PosSalesTips.Equals(input.PosSalesTips))
                ) && 
                (
                    this.TotalPosRevenue == input.TotalPosRevenue ||
                    (this.TotalPosRevenue != null &&
                    this.TotalPosRevenue.Equals(input.TotalPosRevenue))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PosSalesAmount != null)
                    hashCode = hashCode * 59 + this.PosSalesAmount.GetHashCode();
                if (this.PosSalesTax != null)
                    hashCode = hashCode * 59 + this.PosSalesTax.GetHashCode();
                if (this.PosSalesTips != null)
                    hashCode = hashCode * 59 + this.PosSalesTips.GetHashCode();
                if (this.TotalPosRevenue != null)
                    hashCode = hashCode * 59 + this.TotalPosRevenue.GetHashCode();
                return hashCode;
            }
        }
    }

}
