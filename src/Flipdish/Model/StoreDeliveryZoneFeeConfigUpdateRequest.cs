/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// Request to update store delivery zone fee config
    /// </summary>
    [DataContract]
    public partial class StoreDeliveryZoneFeeConfigUpdateRequest :  IEquatable<StoreDeliveryZoneFeeConfigUpdateRequest>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StoreDeliveryZoneFeeConfigUpdateRequest" /> class.
        /// </summary>
        /// <param name="deliveryZoneFees">Delivery zone fees to update.</param>
        public StoreDeliveryZoneFeeConfigUpdateRequest(List<StoreDeliveryZoneFeeConfig> deliveryZoneFees = default(List<StoreDeliveryZoneFeeConfig>))
        {
            this.DeliveryZoneFees = deliveryZoneFees;
        }
        
        /// <summary>
        /// Delivery zone fees to update
        /// </summary>
        /// <value>Delivery zone fees to update</value>
        [DataMember(Name="DeliveryZoneFees", EmitDefaultValue=false)]
        public List<StoreDeliveryZoneFeeConfig> DeliveryZoneFees { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StoreDeliveryZoneFeeConfigUpdateRequest {\n");
            sb.Append("  DeliveryZoneFees: ").Append(DeliveryZoneFees).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as StoreDeliveryZoneFeeConfigUpdateRequest);
        }

        /// <summary>
        /// Returns true if StoreDeliveryZoneFeeConfigUpdateRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of StoreDeliveryZoneFeeConfigUpdateRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StoreDeliveryZoneFeeConfigUpdateRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DeliveryZoneFees == input.DeliveryZoneFees ||
                    this.DeliveryZoneFees != null &&
                    this.DeliveryZoneFees.SequenceEqual(input.DeliveryZoneFees)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DeliveryZoneFees != null)
                    hashCode = hashCode * 59 + this.DeliveryZoneFees.GetHashCode();
                return hashCode;
            }
        }
    }

}
