/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// Store id and name
    /// </summary>
    [DataContract]
    public partial class StoreListItem :  IEquatable<StoreListItem>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StoreListItem" /> class.
        /// </summary>
        /// <param name="storeId">Store Id.</param>
        /// <param name="storeName">Store Name.</param>
        /// <param name="storeGroupId">Store Group Id.</param>
        /// <param name="storeGroupName">Store Group Name.</param>
        /// <param name="hasLoyaltyCampaign">Store has loyalty campaign.</param>
        /// <param name="hasRetentionCampaign">Store has retention campaign.</param>
        public StoreListItem(int? storeId = default(int?), string storeName = default(string), int? storeGroupId = default(int?), string storeGroupName = default(string), bool? hasLoyaltyCampaign = default(bool?), bool? hasRetentionCampaign = default(bool?))
        {
            this.StoreId = storeId;
            this.StoreName = storeName;
            this.StoreGroupId = storeGroupId;
            this.StoreGroupName = storeGroupName;
            this.HasLoyaltyCampaign = hasLoyaltyCampaign;
            this.HasRetentionCampaign = hasRetentionCampaign;
        }
        
        /// <summary>
        /// Store Id
        /// </summary>
        /// <value>Store Id</value>
        [DataMember(Name="StoreId", EmitDefaultValue=false)]
        public int? StoreId { get; set; }

        /// <summary>
        /// Store Name
        /// </summary>
        /// <value>Store Name</value>
        [DataMember(Name="StoreName", EmitDefaultValue=false)]
        public string StoreName { get; set; }

        /// <summary>
        /// Store Group Id
        /// </summary>
        /// <value>Store Group Id</value>
        [DataMember(Name="StoreGroupId", EmitDefaultValue=false)]
        public int? StoreGroupId { get; set; }

        /// <summary>
        /// Store Group Name
        /// </summary>
        /// <value>Store Group Name</value>
        [DataMember(Name="StoreGroupName", EmitDefaultValue=false)]
        public string StoreGroupName { get; set; }

        /// <summary>
        /// Store has loyalty campaign
        /// </summary>
        /// <value>Store has loyalty campaign</value>
        [DataMember(Name="HasLoyaltyCampaign", EmitDefaultValue=false)]
        public bool? HasLoyaltyCampaign { get; set; }

        /// <summary>
        /// Store has retention campaign
        /// </summary>
        /// <value>Store has retention campaign</value>
        [DataMember(Name="HasRetentionCampaign", EmitDefaultValue=false)]
        public bool? HasRetentionCampaign { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StoreListItem {\n");
            sb.Append("  StoreId: ").Append(StoreId).Append("\n");
            sb.Append("  StoreName: ").Append(StoreName).Append("\n");
            sb.Append("  StoreGroupId: ").Append(StoreGroupId).Append("\n");
            sb.Append("  StoreGroupName: ").Append(StoreGroupName).Append("\n");
            sb.Append("  HasLoyaltyCampaign: ").Append(HasLoyaltyCampaign).Append("\n");
            sb.Append("  HasRetentionCampaign: ").Append(HasRetentionCampaign).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as StoreListItem);
        }

        /// <summary>
        /// Returns true if StoreListItem instances are equal
        /// </summary>
        /// <param name="input">Instance of StoreListItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StoreListItem input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.StoreId == input.StoreId ||
                    (this.StoreId != null &&
                    this.StoreId.Equals(input.StoreId))
                ) && 
                (
                    this.StoreName == input.StoreName ||
                    (this.StoreName != null &&
                    this.StoreName.Equals(input.StoreName))
                ) && 
                (
                    this.StoreGroupId == input.StoreGroupId ||
                    (this.StoreGroupId != null &&
                    this.StoreGroupId.Equals(input.StoreGroupId))
                ) && 
                (
                    this.StoreGroupName == input.StoreGroupName ||
                    (this.StoreGroupName != null &&
                    this.StoreGroupName.Equals(input.StoreGroupName))
                ) && 
                (
                    this.HasLoyaltyCampaign == input.HasLoyaltyCampaign ||
                    (this.HasLoyaltyCampaign != null &&
                    this.HasLoyaltyCampaign.Equals(input.HasLoyaltyCampaign))
                ) && 
                (
                    this.HasRetentionCampaign == input.HasRetentionCampaign ||
                    (this.HasRetentionCampaign != null &&
                    this.HasRetentionCampaign.Equals(input.HasRetentionCampaign))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.StoreId != null)
                    hashCode = hashCode * 59 + this.StoreId.GetHashCode();
                if (this.StoreName != null)
                    hashCode = hashCode * 59 + this.StoreName.GetHashCode();
                if (this.StoreGroupId != null)
                    hashCode = hashCode * 59 + this.StoreGroupId.GetHashCode();
                if (this.StoreGroupName != null)
                    hashCode = hashCode * 59 + this.StoreGroupName.GetHashCode();
                if (this.HasLoyaltyCampaign != null)
                    hashCode = hashCode * 59 + this.HasLoyaltyCampaign.GetHashCode();
                if (this.HasRetentionCampaign != null)
                    hashCode = hashCode * 59 + this.HasRetentionCampaign.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
