/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// DuringOrderPromotionOptionsDm
    /// </summary>
    [DataContract]
    public partial class DuringOrderPromotionOptionsDm :  IEquatable<DuringOrderPromotionOptionsDm>
    {
        /// <summary>
        /// Defines DuringOrderPromotionType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum DuringOrderPromotionTypeEnum
        {
            
            /// <summary>
            /// Enum None for value: None
            /// </summary>
            [EnumMember(Value = "None")]
            None = 1,
            
            /// <summary>
            /// Enum BumpFreeChocolate for value: BumpFreeChocolate
            /// </summary>
            [EnumMember(Value = "BumpFreeChocolate")]
            BumpFreeChocolate = 2,
            
            /// <summary>
            /// Enum BumpFreeCoke for value: BumpFreeCoke
            /// </summary>
            [EnumMember(Value = "BumpFreeCoke")]
            BumpFreeCoke = 3,
            
            /// <summary>
            /// Enum SmsInviteFreeChocolate for value: SmsInviteFreeChocolate
            /// </summary>
            [EnumMember(Value = "SmsInviteFreeChocolate")]
            SmsInviteFreeChocolate = 4,
            
            /// <summary>
            /// Enum SmsInviteFreeCoke for value: SmsInviteFreeCoke
            /// </summary>
            [EnumMember(Value = "SmsInviteFreeCoke")]
            SmsInviteFreeCoke = 5
        }

        /// <summary>
        /// Gets or Sets DuringOrderPromotionType
        /// </summary>
        [DataMember(Name="DuringOrderPromotionType", EmitDefaultValue=false)]
        public DuringOrderPromotionTypeEnum? DuringOrderPromotionType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="DuringOrderPromotionOptionsDm" /> class.
        /// </summary>
        /// <param name="duringOrderPromotionType">duringOrderPromotionType.</param>
        /// <param name="minSmsShareCount">minSmsShareCount.</param>
        /// <param name="freeCokeCount">freeCokeCount.</param>
        /// <param name="promotionPeriodSeconds">promotionPeriodSeconds.</param>
        public DuringOrderPromotionOptionsDm(DuringOrderPromotionTypeEnum? duringOrderPromotionType = default(DuringOrderPromotionTypeEnum?), int? minSmsShareCount = default(int?), int? freeCokeCount = default(int?), int? promotionPeriodSeconds = default(int?))
        {
            this.DuringOrderPromotionType = duringOrderPromotionType;
            this.MinSmsShareCount = minSmsShareCount;
            this.FreeCokeCount = freeCokeCount;
            this.PromotionPeriodSeconds = promotionPeriodSeconds;
        }
        

        /// <summary>
        /// Gets or Sets MinSmsShareCount
        /// </summary>
        [DataMember(Name="MinSmsShareCount", EmitDefaultValue=false)]
        public int? MinSmsShareCount { get; set; }

        /// <summary>
        /// Gets or Sets FreeCokeCount
        /// </summary>
        [DataMember(Name="FreeCokeCount", EmitDefaultValue=false)]
        public int? FreeCokeCount { get; set; }

        /// <summary>
        /// Gets or Sets PromotionPeriodSeconds
        /// </summary>
        [DataMember(Name="PromotionPeriodSeconds", EmitDefaultValue=false)]
        public int? PromotionPeriodSeconds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DuringOrderPromotionOptionsDm {\n");
            sb.Append("  DuringOrderPromotionType: ").Append(DuringOrderPromotionType).Append("\n");
            sb.Append("  MinSmsShareCount: ").Append(MinSmsShareCount).Append("\n");
            sb.Append("  FreeCokeCount: ").Append(FreeCokeCount).Append("\n");
            sb.Append("  PromotionPeriodSeconds: ").Append(PromotionPeriodSeconds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DuringOrderPromotionOptionsDm);
        }

        /// <summary>
        /// Returns true if DuringOrderPromotionOptionsDm instances are equal
        /// </summary>
        /// <param name="input">Instance of DuringOrderPromotionOptionsDm to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DuringOrderPromotionOptionsDm input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DuringOrderPromotionType == input.DuringOrderPromotionType ||
                    (this.DuringOrderPromotionType != null &&
                    this.DuringOrderPromotionType.Equals(input.DuringOrderPromotionType))
                ) && 
                (
                    this.MinSmsShareCount == input.MinSmsShareCount ||
                    (this.MinSmsShareCount != null &&
                    this.MinSmsShareCount.Equals(input.MinSmsShareCount))
                ) && 
                (
                    this.FreeCokeCount == input.FreeCokeCount ||
                    (this.FreeCokeCount != null &&
                    this.FreeCokeCount.Equals(input.FreeCokeCount))
                ) && 
                (
                    this.PromotionPeriodSeconds == input.PromotionPeriodSeconds ||
                    (this.PromotionPeriodSeconds != null &&
                    this.PromotionPeriodSeconds.Equals(input.PromotionPeriodSeconds))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DuringOrderPromotionType != null)
                    hashCode = hashCode * 59 + this.DuringOrderPromotionType.GetHashCode();
                if (this.MinSmsShareCount != null)
                    hashCode = hashCode * 59 + this.MinSmsShareCount.GetHashCode();
                if (this.FreeCokeCount != null)
                    hashCode = hashCode * 59 + this.FreeCokeCount.GetHashCode();
                if (this.PromotionPeriodSeconds != null)
                    hashCode = hashCode * 59 + this.PromotionPeriodSeconds.GetHashCode();
                return hashCode;
            }
        }
    }

}
