/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// NutritionInfoV2Item
    /// </summary>
    [DataContract]
    public partial class NutritionInfoV2Item :  IEquatable<NutritionInfoV2Item>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="NutritionInfoV2Item" /> class.
        /// </summary>
        /// <param name="publicId">Menu item or menu item option set item public id.</param>
        /// <param name="allergens">List of allergens for this item.</param>
        public NutritionInfoV2Item(Guid? publicId = default(Guid?), List<NutritionInfoV2Allergen> allergens = default(List<NutritionInfoV2Allergen>))
        {
            this.PublicId = publicId;
            this.Allergens = allergens;
        }
        
        /// <summary>
        /// Menu item or menu item option set item public id
        /// </summary>
        /// <value>Menu item or menu item option set item public id</value>
        [DataMember(Name="PublicId", EmitDefaultValue=false)]
        public Guid? PublicId { get; set; }

        /// <summary>
        /// List of allergens for this item
        /// </summary>
        /// <value>List of allergens for this item</value>
        [DataMember(Name="Allergens", EmitDefaultValue=false)]
        public List<NutritionInfoV2Allergen> Allergens { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class NutritionInfoV2Item {\n");
            sb.Append("  PublicId: ").Append(PublicId).Append("\n");
            sb.Append("  Allergens: ").Append(Allergens).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as NutritionInfoV2Item);
        }

        /// <summary>
        /// Returns true if NutritionInfoV2Item instances are equal
        /// </summary>
        /// <param name="input">Instance of NutritionInfoV2Item to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(NutritionInfoV2Item input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PublicId == input.PublicId ||
                    (this.PublicId != null &&
                    this.PublicId.Equals(input.PublicId))
                ) && 
                (
                    this.Allergens == input.Allergens ||
                    this.Allergens != null &&
                    this.Allergens.SequenceEqual(input.Allergens)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PublicId != null)
                    hashCode = hashCode * 59 + this.PublicId.GetHashCode();
                if (this.Allergens != null)
                    hashCode = hashCode * 59 + this.Allergens.GetHashCode();
                return hashCode;
            }
        }
    }

}
