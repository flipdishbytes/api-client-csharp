/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// Store delivery zone fee config
    /// </summary>
    [DataContract]
    public partial class StoreDeliveryZoneFeeConfig :  IEquatable<StoreDeliveryZoneFeeConfig>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StoreDeliveryZoneFeeConfig" /> class.
        /// </summary>
        /// <param name="deliveryZoneId">ID of the delivery zone this fee corresponds to.</param>
        /// <param name="fee">Fee for delivery within this zone.</param>
        public StoreDeliveryZoneFeeConfig(int? deliveryZoneId = default(int?), double? fee = default(double?))
        {
            this.DeliveryZoneId = deliveryZoneId;
            this.Fee = fee;
        }
        
        /// <summary>
        /// ID of the delivery zone this fee corresponds to
        /// </summary>
        /// <value>ID of the delivery zone this fee corresponds to</value>
        [DataMember(Name="DeliveryZoneId", EmitDefaultValue=false)]
        public int? DeliveryZoneId { get; set; }

        /// <summary>
        /// Fee for delivery within this zone
        /// </summary>
        /// <value>Fee for delivery within this zone</value>
        [DataMember(Name="Fee", EmitDefaultValue=false)]
        public double? Fee { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StoreDeliveryZoneFeeConfig {\n");
            sb.Append("  DeliveryZoneId: ").Append(DeliveryZoneId).Append("\n");
            sb.Append("  Fee: ").Append(Fee).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as StoreDeliveryZoneFeeConfig);
        }

        /// <summary>
        /// Returns true if StoreDeliveryZoneFeeConfig instances are equal
        /// </summary>
        /// <param name="input">Instance of StoreDeliveryZoneFeeConfig to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StoreDeliveryZoneFeeConfig input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DeliveryZoneId == input.DeliveryZoneId ||
                    (this.DeliveryZoneId != null &&
                    this.DeliveryZoneId.Equals(input.DeliveryZoneId))
                ) && 
                (
                    this.Fee == input.Fee ||
                    (this.Fee != null &&
                    this.Fee.Equals(input.Fee))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DeliveryZoneId != null)
                    hashCode = hashCode * 59 + this.DeliveryZoneId.GetHashCode();
                if (this.Fee != null)
                    hashCode = hashCode * 59 + this.Fee.GetHashCode();
                return hashCode;
            }
        }
    }

}
