/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// SubmitOrderResponseDm
    /// </summary>
    [DataContract]
    public partial class SubmitOrderResponseDm :  IEquatable<SubmitOrderResponseDm>
    {
        /// <summary>
        /// Defines DeliveryType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum DeliveryTypeEnum
        {
            
            /// <summary>
            /// Enum Delivery for value: Delivery
            /// </summary>
            [EnumMember(Value = "Delivery")]
            Delivery = 1,
            
            /// <summary>
            /// Enum Pickup for value: Pickup
            /// </summary>
            [EnumMember(Value = "Pickup")]
            Pickup = 2
        }

        /// <summary>
        /// Gets or Sets DeliveryType
        /// </summary>
        [DataMember(Name="DeliveryType", EmitDefaultValue=false)]
        public DeliveryTypeEnum? DeliveryType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SubmitOrderResponseDm" /> class.
        /// </summary>
        /// <param name="orderId">orderId.</param>
        /// <param name="localOrderId">localOrderId.</param>
        /// <param name="deliveryTimeEstimateMinutes">deliveryTimeEstimateMinutes.</param>
        /// <param name="orderPlacedMessage">orderPlacedMessage.</param>
        /// <param name="displayTipControl">displayTipControl.</param>
        /// <param name="displayRateAppControl">displayRateAppControl.</param>
        /// <param name="cancelOrderPeriodSeconds">cancelOrderPeriodSeconds.</param>
        /// <param name="restaurantName">restaurantName.</param>
        /// <param name="linkText">linkText.</param>
        /// <param name="linkUrl">linkUrl.</param>
        /// <param name="deliveryType">deliveryType.</param>
        /// <param name="duringOrderPromotionOptions">duringOrderPromotionOptions.</param>
        /// <param name="redirectUri">redirectUri.</param>
        /// <param name="pickupCode">pickupCode.</param>
        /// <param name="restaurantAddress">restaurantAddress.</param>
        /// <param name="paymentIntentClientSecret">paymentIntentClientSecret.</param>
        public SubmitOrderResponseDm(int? orderId = default(int?), string localOrderId = default(string), int? deliveryTimeEstimateMinutes = default(int?), string orderPlacedMessage = default(string), bool? displayTipControl = default(bool?), bool? displayRateAppControl = default(bool?), int? cancelOrderPeriodSeconds = default(int?), string restaurantName = default(string), string linkText = default(string), string linkUrl = default(string), DeliveryTypeEnum? deliveryType = default(DeliveryTypeEnum?), DuringOrderPromotionOptionsDm duringOrderPromotionOptions = default(DuringOrderPromotionOptionsDm), string redirectUri = default(string), string pickupCode = default(string), string restaurantAddress = default(string), string paymentIntentClientSecret = default(string))
        {
            this.OrderId = orderId;
            this.LocalOrderId = localOrderId;
            this.DeliveryTimeEstimateMinutes = deliveryTimeEstimateMinutes;
            this.OrderPlacedMessage = orderPlacedMessage;
            this.DisplayTipControl = displayTipControl;
            this.DisplayRateAppControl = displayRateAppControl;
            this.CancelOrderPeriodSeconds = cancelOrderPeriodSeconds;
            this.RestaurantName = restaurantName;
            this.LinkText = linkText;
            this.LinkUrl = linkUrl;
            this.DeliveryType = deliveryType;
            this.DuringOrderPromotionOptions = duringOrderPromotionOptions;
            this.RedirectUri = redirectUri;
            this.PickupCode = pickupCode;
            this.RestaurantAddress = restaurantAddress;
            this.PaymentIntentClientSecret = paymentIntentClientSecret;
        }
        
        /// <summary>
        /// Gets or Sets OrderId
        /// </summary>
        [DataMember(Name="OrderId", EmitDefaultValue=false)]
        public int? OrderId { get; set; }

        /// <summary>
        /// Gets or Sets LocalOrderId
        /// </summary>
        [DataMember(Name="LocalOrderId", EmitDefaultValue=false)]
        public string LocalOrderId { get; set; }

        /// <summary>
        /// Gets or Sets DeliveryTimeEstimateMinutes
        /// </summary>
        [DataMember(Name="DeliveryTimeEstimateMinutes", EmitDefaultValue=false)]
        public int? DeliveryTimeEstimateMinutes { get; set; }

        /// <summary>
        /// Gets or Sets OrderPlacedMessage
        /// </summary>
        [DataMember(Name="OrderPlacedMessage", EmitDefaultValue=false)]
        public string OrderPlacedMessage { get; set; }

        /// <summary>
        /// Gets or Sets DisplayTipControl
        /// </summary>
        [DataMember(Name="DisplayTipControl", EmitDefaultValue=false)]
        public bool? DisplayTipControl { get; set; }

        /// <summary>
        /// Gets or Sets DisplayRateAppControl
        /// </summary>
        [DataMember(Name="DisplayRateAppControl", EmitDefaultValue=false)]
        public bool? DisplayRateAppControl { get; set; }

        /// <summary>
        /// Gets or Sets CancelOrderPeriodSeconds
        /// </summary>
        [DataMember(Name="CancelOrderPeriodSeconds", EmitDefaultValue=false)]
        public int? CancelOrderPeriodSeconds { get; set; }

        /// <summary>
        /// Gets or Sets RestaurantName
        /// </summary>
        [DataMember(Name="RestaurantName", EmitDefaultValue=false)]
        public string RestaurantName { get; set; }

        /// <summary>
        /// Gets or Sets LinkText
        /// </summary>
        [DataMember(Name="LinkText", EmitDefaultValue=false)]
        public string LinkText { get; set; }

        /// <summary>
        /// Gets or Sets LinkUrl
        /// </summary>
        [DataMember(Name="LinkUrl", EmitDefaultValue=false)]
        public string LinkUrl { get; set; }


        /// <summary>
        /// Gets or Sets DuringOrderPromotionOptions
        /// </summary>
        [DataMember(Name="DuringOrderPromotionOptions", EmitDefaultValue=false)]
        public DuringOrderPromotionOptionsDm DuringOrderPromotionOptions { get; set; }

        /// <summary>
        /// Gets or Sets RedirectUri
        /// </summary>
        [DataMember(Name="RedirectUri", EmitDefaultValue=false)]
        public string RedirectUri { get; set; }

        /// <summary>
        /// Gets or Sets PickupCode
        /// </summary>
        [DataMember(Name="PickupCode", EmitDefaultValue=false)]
        public string PickupCode { get; set; }

        /// <summary>
        /// Gets or Sets RestaurantAddress
        /// </summary>
        [DataMember(Name="RestaurantAddress", EmitDefaultValue=false)]
        public string RestaurantAddress { get; set; }

        /// <summary>
        /// Gets or Sets PaymentIntentClientSecret
        /// </summary>
        [DataMember(Name="PaymentIntentClientSecret", EmitDefaultValue=false)]
        public string PaymentIntentClientSecret { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SubmitOrderResponseDm {\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  LocalOrderId: ").Append(LocalOrderId).Append("\n");
            sb.Append("  DeliveryTimeEstimateMinutes: ").Append(DeliveryTimeEstimateMinutes).Append("\n");
            sb.Append("  OrderPlacedMessage: ").Append(OrderPlacedMessage).Append("\n");
            sb.Append("  DisplayTipControl: ").Append(DisplayTipControl).Append("\n");
            sb.Append("  DisplayRateAppControl: ").Append(DisplayRateAppControl).Append("\n");
            sb.Append("  CancelOrderPeriodSeconds: ").Append(CancelOrderPeriodSeconds).Append("\n");
            sb.Append("  RestaurantName: ").Append(RestaurantName).Append("\n");
            sb.Append("  LinkText: ").Append(LinkText).Append("\n");
            sb.Append("  LinkUrl: ").Append(LinkUrl).Append("\n");
            sb.Append("  DeliveryType: ").Append(DeliveryType).Append("\n");
            sb.Append("  DuringOrderPromotionOptions: ").Append(DuringOrderPromotionOptions).Append("\n");
            sb.Append("  RedirectUri: ").Append(RedirectUri).Append("\n");
            sb.Append("  PickupCode: ").Append(PickupCode).Append("\n");
            sb.Append("  RestaurantAddress: ").Append(RestaurantAddress).Append("\n");
            sb.Append("  PaymentIntentClientSecret: ").Append(PaymentIntentClientSecret).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SubmitOrderResponseDm);
        }

        /// <summary>
        /// Returns true if SubmitOrderResponseDm instances are equal
        /// </summary>
        /// <param name="input">Instance of SubmitOrderResponseDm to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SubmitOrderResponseDm input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OrderId == input.OrderId ||
                    (this.OrderId != null &&
                    this.OrderId.Equals(input.OrderId))
                ) && 
                (
                    this.LocalOrderId == input.LocalOrderId ||
                    (this.LocalOrderId != null &&
                    this.LocalOrderId.Equals(input.LocalOrderId))
                ) && 
                (
                    this.DeliveryTimeEstimateMinutes == input.DeliveryTimeEstimateMinutes ||
                    (this.DeliveryTimeEstimateMinutes != null &&
                    this.DeliveryTimeEstimateMinutes.Equals(input.DeliveryTimeEstimateMinutes))
                ) && 
                (
                    this.OrderPlacedMessage == input.OrderPlacedMessage ||
                    (this.OrderPlacedMessage != null &&
                    this.OrderPlacedMessage.Equals(input.OrderPlacedMessage))
                ) && 
                (
                    this.DisplayTipControl == input.DisplayTipControl ||
                    (this.DisplayTipControl != null &&
                    this.DisplayTipControl.Equals(input.DisplayTipControl))
                ) && 
                (
                    this.DisplayRateAppControl == input.DisplayRateAppControl ||
                    (this.DisplayRateAppControl != null &&
                    this.DisplayRateAppControl.Equals(input.DisplayRateAppControl))
                ) && 
                (
                    this.CancelOrderPeriodSeconds == input.CancelOrderPeriodSeconds ||
                    (this.CancelOrderPeriodSeconds != null &&
                    this.CancelOrderPeriodSeconds.Equals(input.CancelOrderPeriodSeconds))
                ) && 
                (
                    this.RestaurantName == input.RestaurantName ||
                    (this.RestaurantName != null &&
                    this.RestaurantName.Equals(input.RestaurantName))
                ) && 
                (
                    this.LinkText == input.LinkText ||
                    (this.LinkText != null &&
                    this.LinkText.Equals(input.LinkText))
                ) && 
                (
                    this.LinkUrl == input.LinkUrl ||
                    (this.LinkUrl != null &&
                    this.LinkUrl.Equals(input.LinkUrl))
                ) && 
                (
                    this.DeliveryType == input.DeliveryType ||
                    (this.DeliveryType != null &&
                    this.DeliveryType.Equals(input.DeliveryType))
                ) && 
                (
                    this.DuringOrderPromotionOptions == input.DuringOrderPromotionOptions ||
                    (this.DuringOrderPromotionOptions != null &&
                    this.DuringOrderPromotionOptions.Equals(input.DuringOrderPromotionOptions))
                ) && 
                (
                    this.RedirectUri == input.RedirectUri ||
                    (this.RedirectUri != null &&
                    this.RedirectUri.Equals(input.RedirectUri))
                ) && 
                (
                    this.PickupCode == input.PickupCode ||
                    (this.PickupCode != null &&
                    this.PickupCode.Equals(input.PickupCode))
                ) && 
                (
                    this.RestaurantAddress == input.RestaurantAddress ||
                    (this.RestaurantAddress != null &&
                    this.RestaurantAddress.Equals(input.RestaurantAddress))
                ) && 
                (
                    this.PaymentIntentClientSecret == input.PaymentIntentClientSecret ||
                    (this.PaymentIntentClientSecret != null &&
                    this.PaymentIntentClientSecret.Equals(input.PaymentIntentClientSecret))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OrderId != null)
                    hashCode = hashCode * 59 + this.OrderId.GetHashCode();
                if (this.LocalOrderId != null)
                    hashCode = hashCode * 59 + this.LocalOrderId.GetHashCode();
                if (this.DeliveryTimeEstimateMinutes != null)
                    hashCode = hashCode * 59 + this.DeliveryTimeEstimateMinutes.GetHashCode();
                if (this.OrderPlacedMessage != null)
                    hashCode = hashCode * 59 + this.OrderPlacedMessage.GetHashCode();
                if (this.DisplayTipControl != null)
                    hashCode = hashCode * 59 + this.DisplayTipControl.GetHashCode();
                if (this.DisplayRateAppControl != null)
                    hashCode = hashCode * 59 + this.DisplayRateAppControl.GetHashCode();
                if (this.CancelOrderPeriodSeconds != null)
                    hashCode = hashCode * 59 + this.CancelOrderPeriodSeconds.GetHashCode();
                if (this.RestaurantName != null)
                    hashCode = hashCode * 59 + this.RestaurantName.GetHashCode();
                if (this.LinkText != null)
                    hashCode = hashCode * 59 + this.LinkText.GetHashCode();
                if (this.LinkUrl != null)
                    hashCode = hashCode * 59 + this.LinkUrl.GetHashCode();
                if (this.DeliveryType != null)
                    hashCode = hashCode * 59 + this.DeliveryType.GetHashCode();
                if (this.DuringOrderPromotionOptions != null)
                    hashCode = hashCode * 59 + this.DuringOrderPromotionOptions.GetHashCode();
                if (this.RedirectUri != null)
                    hashCode = hashCode * 59 + this.RedirectUri.GetHashCode();
                if (this.PickupCode != null)
                    hashCode = hashCode * 59 + this.PickupCode.GetHashCode();
                if (this.RestaurantAddress != null)
                    hashCode = hashCode * 59 + this.RestaurantAddress.GetHashCode();
                if (this.PaymentIntentClientSecret != null)
                    hashCode = hashCode * 59 + this.PaymentIntentClientSecret.GetHashCode();
                return hashCode;
            }
        }
    }

}
