/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// App Install information
    /// </summary>
    [DataContract]
    public partial class AppInstall :  IEquatable<AppInstall>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AppInstall" /> class.
        /// </summary>
        /// <param name="name">Name of the installed application..</param>
        /// <param name="firstLogin">Date and time of the user&#39;s first login to the app..</param>
        /// <param name="firstLoginHuman">Human-readable representation of the first login date..</param>
        /// <param name="lastActivity">Date and time of the user&#39;s last activity in the app..</param>
        /// <param name="lastActivityHuman">Human-readable representation of the last activity date..</param>
        /// <param name="googleTokens">Number of Google push notification tokens associated with the app install..</param>
        /// <param name="appleTokens">Number of Apple push notification tokens associated with the app install..</param>
        /// <param name="orderCount">Number of orders placed by the user through this app install..</param>
        /// <param name="userAgentAtSignup">User agent string at the time of signup..</param>
        /// <param name="userAgentMostRecent">Most recent user agent string used by the user..</param>
        public AppInstall(string name = default(string), DateTime? firstLogin = default(DateTime?), string firstLoginHuman = default(string), DateTime? lastActivity = default(DateTime?), string lastActivityHuman = default(string), int? googleTokens = default(int?), int? appleTokens = default(int?), int? orderCount = default(int?), string userAgentAtSignup = default(string), string userAgentMostRecent = default(string))
        {
            this.Name = name;
            this.FirstLogin = firstLogin;
            this.FirstLoginHuman = firstLoginHuman;
            this.LastActivity = lastActivity;
            this.LastActivityHuman = lastActivityHuman;
            this.GoogleTokens = googleTokens;
            this.AppleTokens = appleTokens;
            this.OrderCount = orderCount;
            this.UserAgentAtSignup = userAgentAtSignup;
            this.UserAgentMostRecent = userAgentMostRecent;
        }
        
        /// <summary>
        /// Name of the installed application.
        /// </summary>
        /// <value>Name of the installed application.</value>
        [DataMember(Name="Name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Date and time of the user&#39;s first login to the app.
        /// </summary>
        /// <value>Date and time of the user&#39;s first login to the app.</value>
        [DataMember(Name="FirstLogin", EmitDefaultValue=false)]
        public DateTime? FirstLogin { get; set; }

        /// <summary>
        /// Human-readable representation of the first login date.
        /// </summary>
        /// <value>Human-readable representation of the first login date.</value>
        [DataMember(Name="FirstLoginHuman", EmitDefaultValue=false)]
        public string FirstLoginHuman { get; set; }

        /// <summary>
        /// Date and time of the user&#39;s last activity in the app.
        /// </summary>
        /// <value>Date and time of the user&#39;s last activity in the app.</value>
        [DataMember(Name="LastActivity", EmitDefaultValue=false)]
        public DateTime? LastActivity { get; set; }

        /// <summary>
        /// Human-readable representation of the last activity date.
        /// </summary>
        /// <value>Human-readable representation of the last activity date.</value>
        [DataMember(Name="LastActivityHuman", EmitDefaultValue=false)]
        public string LastActivityHuman { get; set; }

        /// <summary>
        /// Number of Google push notification tokens associated with the app install.
        /// </summary>
        /// <value>Number of Google push notification tokens associated with the app install.</value>
        [DataMember(Name="GoogleTokens", EmitDefaultValue=false)]
        public int? GoogleTokens { get; set; }

        /// <summary>
        /// Number of Apple push notification tokens associated with the app install.
        /// </summary>
        /// <value>Number of Apple push notification tokens associated with the app install.</value>
        [DataMember(Name="AppleTokens", EmitDefaultValue=false)]
        public int? AppleTokens { get; set; }

        /// <summary>
        /// Number of orders placed by the user through this app install.
        /// </summary>
        /// <value>Number of orders placed by the user through this app install.</value>
        [DataMember(Name="OrderCount", EmitDefaultValue=false)]
        public int? OrderCount { get; set; }

        /// <summary>
        /// User agent string at the time of signup.
        /// </summary>
        /// <value>User agent string at the time of signup.</value>
        [DataMember(Name="UserAgentAtSignup", EmitDefaultValue=false)]
        public string UserAgentAtSignup { get; set; }

        /// <summary>
        /// Most recent user agent string used by the user.
        /// </summary>
        /// <value>Most recent user agent string used by the user.</value>
        [DataMember(Name="UserAgentMostRecent", EmitDefaultValue=false)]
        public string UserAgentMostRecent { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AppInstall {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  FirstLogin: ").Append(FirstLogin).Append("\n");
            sb.Append("  FirstLoginHuman: ").Append(FirstLoginHuman).Append("\n");
            sb.Append("  LastActivity: ").Append(LastActivity).Append("\n");
            sb.Append("  LastActivityHuman: ").Append(LastActivityHuman).Append("\n");
            sb.Append("  GoogleTokens: ").Append(GoogleTokens).Append("\n");
            sb.Append("  AppleTokens: ").Append(AppleTokens).Append("\n");
            sb.Append("  OrderCount: ").Append(OrderCount).Append("\n");
            sb.Append("  UserAgentAtSignup: ").Append(UserAgentAtSignup).Append("\n");
            sb.Append("  UserAgentMostRecent: ").Append(UserAgentMostRecent).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AppInstall);
        }

        /// <summary>
        /// Returns true if AppInstall instances are equal
        /// </summary>
        /// <param name="input">Instance of AppInstall to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AppInstall input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.FirstLogin == input.FirstLogin ||
                    (this.FirstLogin != null &&
                    this.FirstLogin.Equals(input.FirstLogin))
                ) && 
                (
                    this.FirstLoginHuman == input.FirstLoginHuman ||
                    (this.FirstLoginHuman != null &&
                    this.FirstLoginHuman.Equals(input.FirstLoginHuman))
                ) && 
                (
                    this.LastActivity == input.LastActivity ||
                    (this.LastActivity != null &&
                    this.LastActivity.Equals(input.LastActivity))
                ) && 
                (
                    this.LastActivityHuman == input.LastActivityHuman ||
                    (this.LastActivityHuman != null &&
                    this.LastActivityHuman.Equals(input.LastActivityHuman))
                ) && 
                (
                    this.GoogleTokens == input.GoogleTokens ||
                    (this.GoogleTokens != null &&
                    this.GoogleTokens.Equals(input.GoogleTokens))
                ) && 
                (
                    this.AppleTokens == input.AppleTokens ||
                    (this.AppleTokens != null &&
                    this.AppleTokens.Equals(input.AppleTokens))
                ) && 
                (
                    this.OrderCount == input.OrderCount ||
                    (this.OrderCount != null &&
                    this.OrderCount.Equals(input.OrderCount))
                ) && 
                (
                    this.UserAgentAtSignup == input.UserAgentAtSignup ||
                    (this.UserAgentAtSignup != null &&
                    this.UserAgentAtSignup.Equals(input.UserAgentAtSignup))
                ) && 
                (
                    this.UserAgentMostRecent == input.UserAgentMostRecent ||
                    (this.UserAgentMostRecent != null &&
                    this.UserAgentMostRecent.Equals(input.UserAgentMostRecent))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.FirstLogin != null)
                    hashCode = hashCode * 59 + this.FirstLogin.GetHashCode();
                if (this.FirstLoginHuman != null)
                    hashCode = hashCode * 59 + this.FirstLoginHuman.GetHashCode();
                if (this.LastActivity != null)
                    hashCode = hashCode * 59 + this.LastActivity.GetHashCode();
                if (this.LastActivityHuman != null)
                    hashCode = hashCode * 59 + this.LastActivityHuman.GetHashCode();
                if (this.GoogleTokens != null)
                    hashCode = hashCode * 59 + this.GoogleTokens.GetHashCode();
                if (this.AppleTokens != null)
                    hashCode = hashCode * 59 + this.AppleTokens.GetHashCode();
                if (this.OrderCount != null)
                    hashCode = hashCode * 59 + this.OrderCount.GetHashCode();
                if (this.UserAgentAtSignup != null)
                    hashCode = hashCode * 59 + this.UserAgentAtSignup.GetHashCode();
                if (this.UserAgentMostRecent != null)
                    hashCode = hashCode * 59 + this.UserAgentMostRecent.GetHashCode();
                return hashCode;
            }
        }
    }

}
