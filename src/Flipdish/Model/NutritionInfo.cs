/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// Menu Nutrition Information
    /// </summary>
    [DataContract]
    public partial class NutritionInfo :  IEquatable<NutritionInfo>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="NutritionInfo" /> class.
        /// </summary>
        /// <param name="version">Version of the nutrition information model.</param>
        /// <param name="menuItems">List of menu item nutrition infos.</param>
        /// <param name="menuItemOptionSetItems">List of menu item option set nutrition infos.</param>
        public NutritionInfo(string version = default(string), List<NutritionInfoMenuItem> menuItems = default(List<NutritionInfoMenuItem>), List<NutritionInfoMenuOptionSetItem> menuItemOptionSetItems = default(List<NutritionInfoMenuOptionSetItem>))
        {
            this.Version = version;
            this.MenuItems = menuItems;
            this.MenuItemOptionSetItems = menuItemOptionSetItems;
        }
        
        /// <summary>
        /// Version of the nutrition information model
        /// </summary>
        /// <value>Version of the nutrition information model</value>
        [DataMember(Name="Version", EmitDefaultValue=false)]
        public string Version { get; set; }

        /// <summary>
        /// List of menu item nutrition infos
        /// </summary>
        /// <value>List of menu item nutrition infos</value>
        [DataMember(Name="MenuItems", EmitDefaultValue=false)]
        public List<NutritionInfoMenuItem> MenuItems { get; set; }

        /// <summary>
        /// List of menu item option set nutrition infos
        /// </summary>
        /// <value>List of menu item option set nutrition infos</value>
        [DataMember(Name="MenuItemOptionSetItems", EmitDefaultValue=false)]
        public List<NutritionInfoMenuOptionSetItem> MenuItemOptionSetItems { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class NutritionInfo {\n");
            sb.Append("  Version: ").Append(Version).Append("\n");
            sb.Append("  MenuItems: ").Append(MenuItems).Append("\n");
            sb.Append("  MenuItemOptionSetItems: ").Append(MenuItemOptionSetItems).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as NutritionInfo);
        }

        /// <summary>
        /// Returns true if NutritionInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of NutritionInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(NutritionInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Version == input.Version ||
                    (this.Version != null &&
                    this.Version.Equals(input.Version))
                ) && 
                (
                    this.MenuItems == input.MenuItems ||
                    this.MenuItems != null &&
                    this.MenuItems.SequenceEqual(input.MenuItems)
                ) && 
                (
                    this.MenuItemOptionSetItems == input.MenuItemOptionSetItems ||
                    this.MenuItemOptionSetItems != null &&
                    this.MenuItemOptionSetItems.SequenceEqual(input.MenuItemOptionSetItems)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Version != null)
                    hashCode = hashCode * 59 + this.Version.GetHashCode();
                if (this.MenuItems != null)
                    hashCode = hashCode * 59 + this.MenuItems.GetHashCode();
                if (this.MenuItemOptionSetItems != null)
                    hashCode = hashCode * 59 + this.MenuItemOptionSetItems.GetHashCode();
                return hashCode;
            }
        }
    }

}
