/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// AppStoreAppSupportInfo
    /// </summary>
    [DataContract]
    public partial class AppStoreAppSupportInfo :  IEquatable<AppStoreAppSupportInfo>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AppStoreAppSupportInfo" /> class.
        /// </summary>
        /// <param name="privacyPolicy">privacyPolicy.</param>
        /// <param name="termsOfUse">termsOfUse.</param>
        /// <param name="companyWebsite">companyWebsite.</param>
        /// <param name="learnMore">learnMore.</param>
        /// <param name="installationMessage">installationMessage.</param>
        /// <param name="supportEmail">supportEmail.</param>
        public AppStoreAppSupportInfo(string privacyPolicy = default(string), string termsOfUse = default(string), string companyWebsite = default(string), string learnMore = default(string), string installationMessage = default(string), string supportEmail = default(string))
        {
            this.PrivacyPolicy = privacyPolicy;
            this.TermsOfUse = termsOfUse;
            this.CompanyWebsite = companyWebsite;
            this.LearnMore = learnMore;
            this.InstallationMessage = installationMessage;
            this.SupportEmail = supportEmail;
        }
        
        /// <summary>
        /// Gets or Sets PrivacyPolicy
        /// </summary>
        [DataMember(Name="PrivacyPolicy", EmitDefaultValue=false)]
        public string PrivacyPolicy { get; set; }

        /// <summary>
        /// Gets or Sets TermsOfUse
        /// </summary>
        [DataMember(Name="TermsOfUse", EmitDefaultValue=false)]
        public string TermsOfUse { get; set; }

        /// <summary>
        /// Gets or Sets CompanyWebsite
        /// </summary>
        [DataMember(Name="CompanyWebsite", EmitDefaultValue=false)]
        public string CompanyWebsite { get; set; }

        /// <summary>
        /// Gets or Sets LearnMore
        /// </summary>
        [DataMember(Name="LearnMore", EmitDefaultValue=false)]
        public string LearnMore { get; set; }

        /// <summary>
        /// Gets or Sets InstallationMessage
        /// </summary>
        [DataMember(Name="InstallationMessage", EmitDefaultValue=false)]
        public string InstallationMessage { get; set; }

        /// <summary>
        /// Gets or Sets SupportEmail
        /// </summary>
        [DataMember(Name="SupportEmail", EmitDefaultValue=false)]
        public string SupportEmail { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AppStoreAppSupportInfo {\n");
            sb.Append("  PrivacyPolicy: ").Append(PrivacyPolicy).Append("\n");
            sb.Append("  TermsOfUse: ").Append(TermsOfUse).Append("\n");
            sb.Append("  CompanyWebsite: ").Append(CompanyWebsite).Append("\n");
            sb.Append("  LearnMore: ").Append(LearnMore).Append("\n");
            sb.Append("  InstallationMessage: ").Append(InstallationMessage).Append("\n");
            sb.Append("  SupportEmail: ").Append(SupportEmail).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AppStoreAppSupportInfo);
        }

        /// <summary>
        /// Returns true if AppStoreAppSupportInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of AppStoreAppSupportInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AppStoreAppSupportInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PrivacyPolicy == input.PrivacyPolicy ||
                    (this.PrivacyPolicy != null &&
                    this.PrivacyPolicy.Equals(input.PrivacyPolicy))
                ) && 
                (
                    this.TermsOfUse == input.TermsOfUse ||
                    (this.TermsOfUse != null &&
                    this.TermsOfUse.Equals(input.TermsOfUse))
                ) && 
                (
                    this.CompanyWebsite == input.CompanyWebsite ||
                    (this.CompanyWebsite != null &&
                    this.CompanyWebsite.Equals(input.CompanyWebsite))
                ) && 
                (
                    this.LearnMore == input.LearnMore ||
                    (this.LearnMore != null &&
                    this.LearnMore.Equals(input.LearnMore))
                ) && 
                (
                    this.InstallationMessage == input.InstallationMessage ||
                    (this.InstallationMessage != null &&
                    this.InstallationMessage.Equals(input.InstallationMessage))
                ) && 
                (
                    this.SupportEmail == input.SupportEmail ||
                    (this.SupportEmail != null &&
                    this.SupportEmail.Equals(input.SupportEmail))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PrivacyPolicy != null)
                    hashCode = hashCode * 59 + this.PrivacyPolicy.GetHashCode();
                if (this.TermsOfUse != null)
                    hashCode = hashCode * 59 + this.TermsOfUse.GetHashCode();
                if (this.CompanyWebsite != null)
                    hashCode = hashCode * 59 + this.CompanyWebsite.GetHashCode();
                if (this.LearnMore != null)
                    hashCode = hashCode * 59 + this.LearnMore.GetHashCode();
                if (this.InstallationMessage != null)
                    hashCode = hashCode * 59 + this.InstallationMessage.GetHashCode();
                if (this.SupportEmail != null)
                    hashCode = hashCode * 59 + this.SupportEmail.GetHashCode();
                return hashCode;
            }
        }
    }

}
