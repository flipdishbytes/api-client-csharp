/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// APM Statistics
    /// </summary>
    [DataContract]
    public partial class ApmStatistics :  IEquatable<ApmStatistics>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApmStatistics" /> class.
        /// </summary>
        /// <param name="TotalUsers">Total users that were created because of APM.</param>
        /// <param name="TotalOrders">Total Orders created by users created because of APM.</param>
        /// <param name="TotalOrderValue">Total Order Value by users created because of APM.</param>
        /// <param name="EstimatedMinutesSaved">Total amount of time spent with APM.</param>
        public ApmStatistics(int? TotalUsers = default(int?), int? TotalOrders = default(int?), double? TotalOrderValue = default(double?), int? EstimatedMinutesSaved = default(int?))
        {
            this.TotalUsers = TotalUsers;
            this.TotalOrders = TotalOrders;
            this.TotalOrderValue = TotalOrderValue;
            this.EstimatedMinutesSaved = EstimatedMinutesSaved;
        }
        
        /// <summary>
        /// Total users that were created because of APM
        /// </summary>
        /// <value>Total users that were created because of APM</value>
        [DataMember(Name="TotalUsers", EmitDefaultValue=false)]
        public int? TotalUsers { get; set; }

        /// <summary>
        /// Total Orders created by users created because of APM
        /// </summary>
        /// <value>Total Orders created by users created because of APM</value>
        [DataMember(Name="TotalOrders", EmitDefaultValue=false)]
        public int? TotalOrders { get; set; }

        /// <summary>
        /// Total Order Value by users created because of APM
        /// </summary>
        /// <value>Total Order Value by users created because of APM</value>
        [DataMember(Name="TotalOrderValue", EmitDefaultValue=false)]
        public double? TotalOrderValue { get; set; }

        /// <summary>
        /// Total amount of time spent with APM
        /// </summary>
        /// <value>Total amount of time spent with APM</value>
        [DataMember(Name="EstimatedMinutesSaved", EmitDefaultValue=false)]
        public int? EstimatedMinutesSaved { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApmStatistics {\n");
            sb.Append("  TotalUsers: ").Append(TotalUsers).Append("\n");
            sb.Append("  TotalOrders: ").Append(TotalOrders).Append("\n");
            sb.Append("  TotalOrderValue: ").Append(TotalOrderValue).Append("\n");
            sb.Append("  EstimatedMinutesSaved: ").Append(EstimatedMinutesSaved).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApmStatistics);
        }

        /// <summary>
        /// Returns true if ApmStatistics instances are equal
        /// </summary>
        /// <param name="input">Instance of ApmStatistics to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApmStatistics input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TotalUsers == input.TotalUsers ||
                    (this.TotalUsers != null &&
                    this.TotalUsers.Equals(input.TotalUsers))
                ) && 
                (
                    this.TotalOrders == input.TotalOrders ||
                    (this.TotalOrders != null &&
                    this.TotalOrders.Equals(input.TotalOrders))
                ) && 
                (
                    this.TotalOrderValue == input.TotalOrderValue ||
                    (this.TotalOrderValue != null &&
                    this.TotalOrderValue.Equals(input.TotalOrderValue))
                ) && 
                (
                    this.EstimatedMinutesSaved == input.EstimatedMinutesSaved ||
                    (this.EstimatedMinutesSaved != null &&
                    this.EstimatedMinutesSaved.Equals(input.EstimatedMinutesSaved))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TotalUsers != null)
                    hashCode = hashCode * 59 + this.TotalUsers.GetHashCode();
                if (this.TotalOrders != null)
                    hashCode = hashCode * 59 + this.TotalOrders.GetHashCode();
                if (this.TotalOrderValue != null)
                    hashCode = hashCode * 59 + this.TotalOrderValue.GetHashCode();
                if (this.EstimatedMinutesSaved != null)
                    hashCode = hashCode * 59 + this.EstimatedMinutesSaved.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
