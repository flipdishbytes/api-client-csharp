/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// APM Statistics
    /// </summary>
    [DataContract]
    public partial class ApmStatistics :  IEquatable<ApmStatistics>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApmStatistics" /> class.
        /// </summary>
        /// <param name="estimatedMinutesSaved">Total amount of time spent with APM.</param>
        /// <param name="estimatedMinutesCouldSaved">Total amount of time that could be saved.</param>
        /// <param name="currencyData">Currency based data.</param>
        public ApmStatistics(int? estimatedMinutesSaved = default(int?), int? estimatedMinutesCouldSaved = default(int?), List<StatisticsCurrencyDataPoint> currencyData = default(List<StatisticsCurrencyDataPoint>))
        {
            this.EstimatedMinutesSaved = estimatedMinutesSaved;
            this.EstimatedMinutesCouldSaved = estimatedMinutesCouldSaved;
            this.CurrencyData = currencyData;
        }
        
        /// <summary>
        /// Total amount of time spent with APM
        /// </summary>
        /// <value>Total amount of time spent with APM</value>
        [DataMember(Name="EstimatedMinutesSaved", EmitDefaultValue=false)]
        public int? EstimatedMinutesSaved { get; set; }

        /// <summary>
        /// Total amount of time that could be saved
        /// </summary>
        /// <value>Total amount of time that could be saved</value>
        [DataMember(Name="EstimatedMinutesCouldSaved", EmitDefaultValue=false)]
        public int? EstimatedMinutesCouldSaved { get; set; }

        /// <summary>
        /// Currency based data
        /// </summary>
        /// <value>Currency based data</value>
        [DataMember(Name="CurrencyData", EmitDefaultValue=false)]
        public List<StatisticsCurrencyDataPoint> CurrencyData { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApmStatistics {\n");
            sb.Append("  EstimatedMinutesSaved: ").Append(EstimatedMinutesSaved).Append("\n");
            sb.Append("  EstimatedMinutesCouldSaved: ").Append(EstimatedMinutesCouldSaved).Append("\n");
            sb.Append("  CurrencyData: ").Append(CurrencyData).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApmStatistics);
        }

        /// <summary>
        /// Returns true if ApmStatistics instances are equal
        /// </summary>
        /// <param name="input">Instance of ApmStatistics to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApmStatistics input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EstimatedMinutesSaved == input.EstimatedMinutesSaved ||
                    (this.EstimatedMinutesSaved != null &&
                    this.EstimatedMinutesSaved.Equals(input.EstimatedMinutesSaved))
                ) && 
                (
                    this.EstimatedMinutesCouldSaved == input.EstimatedMinutesCouldSaved ||
                    (this.EstimatedMinutesCouldSaved != null &&
                    this.EstimatedMinutesCouldSaved.Equals(input.EstimatedMinutesCouldSaved))
                ) && 
                (
                    this.CurrencyData == input.CurrencyData ||
                    this.CurrencyData != null &&
                    this.CurrencyData.SequenceEqual(input.CurrencyData)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EstimatedMinutesSaved != null)
                    hashCode = hashCode * 59 + this.EstimatedMinutesSaved.GetHashCode();
                if (this.EstimatedMinutesCouldSaved != null)
                    hashCode = hashCode * 59 + this.EstimatedMinutesCouldSaved.GetHashCode();
                if (this.CurrencyData != null)
                    hashCode = hashCode * 59 + this.CurrencyData.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
