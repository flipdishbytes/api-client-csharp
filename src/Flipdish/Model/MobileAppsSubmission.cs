/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Flipdish.Client.SwaggerDateConverter;

namespace Flipdish.Model
{
    /// <summary>
    /// Mobile Apps form submission
    /// </summary>
    [DataContract]
    public partial class MobileAppsSubmission :  IEquatable<MobileAppsSubmission>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MobileAppsSubmission" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected MobileAppsSubmission() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="MobileAppsSubmission" /> class.
        /// </summary>
        /// <param name="submissionId">Mobile Apps Submission Id.</param>
        /// <param name="appName">App Name (required).</param>
        /// <param name="appDescription">App Description (required).</param>
        /// <param name="appShortDescription">App Description (required).</param>
        /// <param name="keywords">Keywords.</param>
        /// <param name="autoPublish">Publish automatically.</param>
        public MobileAppsSubmission(int? submissionId = default(int?), string appName = default(string), string appDescription = default(string), string appShortDescription = default(string), List<string> keywords = default(List<string>), bool? autoPublish = default(bool?))
        {
            // to ensure "appName" is required (not null)
            if (appName == null)
            {
                throw new InvalidDataException("appName is a required property for MobileAppsSubmission and cannot be null");
            }
            else
            {
                this.AppName = appName;
            }
            // to ensure "appDescription" is required (not null)
            if (appDescription == null)
            {
                throw new InvalidDataException("appDescription is a required property for MobileAppsSubmission and cannot be null");
            }
            else
            {
                this.AppDescription = appDescription;
            }
            // to ensure "appShortDescription" is required (not null)
            if (appShortDescription == null)
            {
                throw new InvalidDataException("appShortDescription is a required property for MobileAppsSubmission and cannot be null");
            }
            else
            {
                this.AppShortDescription = appShortDescription;
            }
            this.SubmissionId = submissionId;
            this.Keywords = keywords;
            this.AutoPublish = autoPublish;
        }
        
        /// <summary>
        /// Mobile Apps Submission Id
        /// </summary>
        /// <value>Mobile Apps Submission Id</value>
        [DataMember(Name="SubmissionId", EmitDefaultValue=false)]
        public int? SubmissionId { get; set; }

        /// <summary>
        /// App Name
        /// </summary>
        /// <value>App Name</value>
        [DataMember(Name="AppName", EmitDefaultValue=false)]
        public string AppName { get; set; }

        /// <summary>
        /// App Description
        /// </summary>
        /// <value>App Description</value>
        [DataMember(Name="AppDescription", EmitDefaultValue=false)]
        public string AppDescription { get; set; }

        /// <summary>
        /// App Description
        /// </summary>
        /// <value>App Description</value>
        [DataMember(Name="AppShortDescription", EmitDefaultValue=false)]
        public string AppShortDescription { get; set; }

        /// <summary>
        /// Keywords
        /// </summary>
        /// <value>Keywords</value>
        [DataMember(Name="Keywords", EmitDefaultValue=false)]
        public List<string> Keywords { get; set; }

        /// <summary>
        /// Publish automatically
        /// </summary>
        /// <value>Publish automatically</value>
        [DataMember(Name="AutoPublish", EmitDefaultValue=false)]
        public bool? AutoPublish { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MobileAppsSubmission {\n");
            sb.Append("  SubmissionId: ").Append(SubmissionId).Append("\n");
            sb.Append("  AppName: ").Append(AppName).Append("\n");
            sb.Append("  AppDescription: ").Append(AppDescription).Append("\n");
            sb.Append("  AppShortDescription: ").Append(AppShortDescription).Append("\n");
            sb.Append("  Keywords: ").Append(Keywords).Append("\n");
            sb.Append("  AutoPublish: ").Append(AutoPublish).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MobileAppsSubmission);
        }

        /// <summary>
        /// Returns true if MobileAppsSubmission instances are equal
        /// </summary>
        /// <param name="input">Instance of MobileAppsSubmission to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MobileAppsSubmission input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SubmissionId == input.SubmissionId ||
                    (this.SubmissionId != null &&
                    this.SubmissionId.Equals(input.SubmissionId))
                ) && 
                (
                    this.AppName == input.AppName ||
                    (this.AppName != null &&
                    this.AppName.Equals(input.AppName))
                ) && 
                (
                    this.AppDescription == input.AppDescription ||
                    (this.AppDescription != null &&
                    this.AppDescription.Equals(input.AppDescription))
                ) && 
                (
                    this.AppShortDescription == input.AppShortDescription ||
                    (this.AppShortDescription != null &&
                    this.AppShortDescription.Equals(input.AppShortDescription))
                ) && 
                (
                    this.Keywords == input.Keywords ||
                    this.Keywords != null &&
                    this.Keywords.SequenceEqual(input.Keywords)
                ) && 
                (
                    this.AutoPublish == input.AutoPublish ||
                    (this.AutoPublish != null &&
                    this.AutoPublish.Equals(input.AutoPublish))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SubmissionId != null)
                    hashCode = hashCode * 59 + this.SubmissionId.GetHashCode();
                if (this.AppName != null)
                    hashCode = hashCode * 59 + this.AppName.GetHashCode();
                if (this.AppDescription != null)
                    hashCode = hashCode * 59 + this.AppDescription.GetHashCode();
                if (this.AppShortDescription != null)
                    hashCode = hashCode * 59 + this.AppShortDescription.GetHashCode();
                if (this.Keywords != null)
                    hashCode = hashCode * 59 + this.Keywords.GetHashCode();
                if (this.AutoPublish != null)
                    hashCode = hashCode * 59 + this.AutoPublish.GetHashCode();
                return hashCode;
            }
        }
    }

}
