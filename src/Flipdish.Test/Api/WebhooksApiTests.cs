/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Flipdish.Client;
using Flipdish.Api;
using Flipdish.Model;

namespace Flipdish.Test
{
    /// <summary>
    ///  Class for testing WebhooksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class WebhooksApiTests
    {
        private WebhooksApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WebhooksApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WebhooksApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' WebhooksApi
            //Assert.IsInstanceOfType(typeof(WebhooksApi), instance, "instance is a WebhooksApi");
        }

        
        /// <summary>
        /// Test CraeteWebhookSubscription
        /// </summary>
        [Test]
        public void CraeteWebhookSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oauthAppId = null;
            //WebhookSubscription webhookSubscription = null;
            //string appId = null;
            //var response = instance.CraeteWebhookSubscription(oauthAppId, webhookSubscription, appId);
            //Assert.IsInstanceOf<RestApiIntegerResult> (response, "response is RestApiIntegerResult");
        }
        
        /// <summary>
        /// Test CreateWebhookSubscriptionEventNames
        /// </summary>
        [Test]
        public void CreateWebhookSubscriptionEventNamesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oauthAppId = null;
            //int? webhookSubscriptionId = null;
            //string eventName = null;
            //string appId = null;
            //instance.CreateWebhookSubscriptionEventNames(oauthAppId, webhookSubscriptionId, eventName, appId);
            
        }
        
        /// <summary>
        /// Test DeleteWebhookSubscription
        /// </summary>
        [Test]
        public void DeleteWebhookSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oauthAppId = null;
            //int? webhookSubscriptionId = null;
            //string appId = null;
            //instance.DeleteWebhookSubscription(oauthAppId, webhookSubscriptionId, appId);
            
        }
        
        /// <summary>
        /// Test DeleteWebhookSubscriptionEventName
        /// </summary>
        [Test]
        public void DeleteWebhookSubscriptionEventNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oauthAppId = null;
            //int? webhookSubscriptionId = null;
            //string eventName = null;
            //string appId = null;
            //instance.DeleteWebhookSubscriptionEventName(oauthAppId, webhookSubscriptionId, eventName, appId);
            
        }
        
        /// <summary>
        /// Test GetWebhookEventNames
        /// </summary>
        [Test]
        public void GetWebhookEventNamesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //var response = instance.GetWebhookEventNames(appId);
            //Assert.IsInstanceOf<RestApiStringArrayResult> (response, "response is RestApiStringArrayResult");
        }
        
        /// <summary>
        /// Test GetWebhookEventNamesBySubscriptionId
        /// </summary>
        [Test]
        public void GetWebhookEventNamesBySubscriptionIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oauthAppId = null;
            //int? webhookSubscriptionId = null;
            //string appId = null;
            //var response = instance.GetWebhookEventNamesBySubscriptionId(oauthAppId, webhookSubscriptionId, appId);
            //Assert.IsInstanceOf<RestApiStringArrayResult> (response, "response is RestApiStringArrayResult");
        }
        
        /// <summary>
        /// Test GetWebhookLogs
        /// </summary>
        [Test]
        public void GetWebhookLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oauthAppId = null;
            //int? webhookSubscriptionId = null;
            //DateTime? start = null;
            //DateTime? end = null;
            //string appId = null;
            //int? page = null;
            //int? limit = null;
            //var response = instance.GetWebhookLogs(oauthAppId, webhookSubscriptionId, start, end, appId, page, limit);
            //Assert.IsInstanceOf<RestApiPaginationResultWebhookLog> (response, "response is RestApiPaginationResultWebhookLog");
        }
        
        /// <summary>
        /// Test GetWebhookSubscriptions
        /// </summary>
        [Test]
        public void GetWebhookSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oauthAppId = null;
            //string appId = null;
            //int? page = null;
            //int? limit = null;
            //var response = instance.GetWebhookSubscriptions(oauthAppId, appId, page, limit);
            //Assert.IsInstanceOf<RestApiPaginationResultWebhookSubscription> (response, "response is RestApiPaginationResultWebhookSubscription");
        }
        
        /// <summary>
        /// Test UpdateWebhookSubscription
        /// </summary>
        [Test]
        public void UpdateWebhookSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oauthAppId = null;
            //int? webhookSubscriptionId = null;
            //WebhookSubscription webhookSubscription = null;
            //string appId = null;
            //instance.UpdateWebhookSubscription(oauthAppId, webhookSubscriptionId, webhookSubscription, appId);
            
        }
        
    }

}
