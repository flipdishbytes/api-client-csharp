/* 
 * Flipdish Open API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Flipdish.Client;
using Flipdish.Api;
using Flipdish.Model;

namespace Flipdish.Test
{
    /// <summary>
    ///  Class for testing OAuthClientsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OAuthClientsApiTests
    {
        private OAuthClientsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OAuthClientsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OAuthClientsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OAuthClientsApi
            //Assert.IsInstanceOfType(typeof(OAuthClientsApi), instance, "instance is a OAuthClientsApi");
        }

        
        /// <summary>
        /// Test AddRedirectUri
        /// </summary>
        [Test]
        public void AddRedirectUriTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oAuthClientId = null;
            //string uri = null;
            //string apiVersion = null;
            //var response = instance.AddRedirectUri(oAuthClientId, uri, apiVersion);
            //Assert.IsInstanceOf<RestApiResultOauthClientRedirectUri> (response, "response is RestApiResultOauthClientRedirectUri");
        }
        
        /// <summary>
        /// Test CreateOAuthClient
        /// </summary>
        [Test]
        public void CreateOAuthClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OAuthClient oAuthClient = null;
            //string apiVersion = null;
            //instance.CreateOAuthClient(oAuthClient, apiVersion);
            
        }
        
        /// <summary>
        /// Test DeleteOAuthClient
        /// </summary>
        [Test]
        public void DeleteOAuthClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oAuthClientId = null;
            //string apiVersion = null;
            //instance.DeleteOAuthClient(oAuthClientId, apiVersion);
            
        }
        
        /// <summary>
        /// Test GetOAuthClientByClientId
        /// </summary>
        [Test]
        public void GetOAuthClientByClientIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientId = null;
            //string apiVersion = null;
            //var response = instance.GetOAuthClientByClientId(clientId, apiVersion);
            //Assert.IsInstanceOf<RestApiResultOAuthClient> (response, "response is RestApiResultOAuthClient");
        }
        
        /// <summary>
        /// Test GetOAuthClientSecret
        /// </summary>
        [Test]
        public void GetOAuthClientSecretTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientId = null;
            //string apiVersion = null;
            //var response = instance.GetOAuthClientSecret(clientId, apiVersion);
            //Assert.IsInstanceOf<RestApiStringResult> (response, "response is RestApiStringResult");
        }
        
        /// <summary>
        /// Test GetOAuthClients
        /// </summary>
        [Test]
        public void GetOAuthClientsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiVersion = null;
            //var response = instance.GetOAuthClients(apiVersion);
            //Assert.IsInstanceOf<RestApiArrayResultOAuthClient> (response, "response is RestApiArrayResultOAuthClient");
        }
        
        /// <summary>
        /// Test GetOauthAccessToken
        /// </summary>
        [Test]
        public void GetOauthAccessTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oAuthClientId = null;
            //string apiVersion = null;
            //var response = instance.GetOauthAccessToken(oAuthClientId, apiVersion);
            //Assert.IsInstanceOf<RestApiStringResult> (response, "response is RestApiStringResult");
        }
        
        /// <summary>
        /// Test GetRedirectUris
        /// </summary>
        [Test]
        public void GetRedirectUrisTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oAuthClientId = null;
            //string apiVersion = null;
            //var response = instance.GetRedirectUris(oAuthClientId, apiVersion);
            //Assert.IsInstanceOf<RestApiArrayResultOauthClientRedirectUri> (response, "response is RestApiArrayResultOauthClientRedirectUri");
        }
        
        /// <summary>
        /// Test RemoveRedirectUri
        /// </summary>
        [Test]
        public void RemoveRedirectUriTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oAuthClientId = null;
            //int? uriId = null;
            //string apiVersion = null;
            //instance.RemoveRedirectUri(oAuthClientId, uriId, apiVersion);
            
        }
        
    }

}
