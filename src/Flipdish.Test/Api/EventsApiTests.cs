/* 
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Flipdish.Client;
using Flipdish.Api;
using Flipdish.Model;

namespace Flipdish.Test
{
    /// <summary>
    ///  Class for testing EventsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class EventsApiTests
    {
        private EventsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new EventsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EventsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' EventsApi
            //Assert.IsInstanceOfType(typeof(EventsApi), instance, "instance is a EventsApi");
        }

        
        /// <summary>
        /// Test GetCustomerEvents
        /// </summary>
        [Test]
        public void GetCustomerEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customerId = null;
            //int? limit = null;
            //int? page = null;
            //DateTime? start = null;
            //DateTime? end = null;
            //int? orderId = null;
            //int? storeId = null;
            //int? storeGroupId = null;
            //int? userId = null;
            //string userEmail = null;
            //string userName = null;
            //string voucherCode = null;
            //List<string> eventType = null;
            //string flipdishEventId = null;
            //var response = instance.GetCustomerEvents(customerId, limit, page, start, end, orderId, storeId, storeGroupId, userId, userEmail, userName, voucherCode, eventType, flipdishEventId);
            //Assert.IsInstanceOf<RestApiEventSearchPaginationResult> (response, "response is RestApiEventSearchPaginationResult");
        }
        
        /// <summary>
        /// Test GetEvents
        /// </summary>
        [Test]
        public void GetEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? storeId = null;
            //int? whiteLabelId = null;
            //int? customerId = null;
            //int? limit = null;
            //int? page = null;
            //DateTime? start = null;
            //DateTime? end = null;
            //int? orderId = null;
            //int? storeId2 = null;
            //int? storeGroupId = null;
            //int? userId = null;
            //string userEmail = null;
            //string userName = null;
            //string voucherCode = null;
            //List<string> eventType = null;
            //string flipdishEventId = null;
            //var response = instance.GetEvents(storeId, whiteLabelId, customerId, limit, page, start, end, orderId, storeId2, storeGroupId, userId, userEmail, userName, voucherCode, eventType, flipdishEventId);
            //Assert.IsInstanceOf<RestApiEventSearchPaginationResult> (response, "response is RestApiEventSearchPaginationResult");
        }
        
        /// <summary>
        /// Test GetEventsById
        /// </summary>
        [Test]
        public void GetEventsByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? eventId = null;
            //var response = instance.GetEventsById(eventId);
            //Assert.IsInstanceOf<EventSearchResult> (response, "response is EventSearchResult");
        }
        
        /// <summary>
        /// Test GetMenuEvents
        /// </summary>
        [Test]
        public void GetMenuEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? menuId = null;
            //int? limit = null;
            //int? page = null;
            //DateTime? start = null;
            //DateTime? end = null;
            //int? orderId = null;
            //int? storeId = null;
            //int? storeGroupId = null;
            //int? userId = null;
            //string userEmail = null;
            //string userName = null;
            //string voucherCode = null;
            //List<string> eventType = null;
            //string flipdishEventId = null;
            //var response = instance.GetMenuEvents(menuId, limit, page, start, end, orderId, storeId, storeGroupId, userId, userEmail, userName, voucherCode, eventType, flipdishEventId);
            //Assert.IsInstanceOf<RestApiEventSearchPaginationResult> (response, "response is RestApiEventSearchPaginationResult");
        }
        
        /// <summary>
        /// Test GetOrderEvents
        /// </summary>
        [Test]
        public void GetOrderEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? orderId = null;
            //int? limit = null;
            //int? page = null;
            //DateTime? start = null;
            //DateTime? end = null;
            //int? orderId2 = null;
            //int? storeId = null;
            //int? storeGroupId = null;
            //int? userId = null;
            //string userEmail = null;
            //string userName = null;
            //string voucherCode = null;
            //List<string> eventType = null;
            //string flipdishEventId = null;
            //var response = instance.GetOrderEvents(orderId, limit, page, start, end, orderId2, storeId, storeGroupId, userId, userEmail, userName, voucherCode, eventType, flipdishEventId);
            //Assert.IsInstanceOf<RestApiEventSearchPaginationResult> (response, "response is RestApiEventSearchPaginationResult");
        }
        
        /// <summary>
        /// Test GetOrderEventsByCustomer
        /// </summary>
        [Test]
        public void GetOrderEventsByCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customerId = null;
            //int? limit = null;
            //int? page = null;
            //DateTime? start = null;
            //DateTime? end = null;
            //int? orderId = null;
            //int? storeId = null;
            //int? storeGroupId = null;
            //int? userId = null;
            //string userEmail = null;
            //string userName = null;
            //string voucherCode = null;
            //List<string> eventType = null;
            //string flipdishEventId = null;
            //var response = instance.GetOrderEventsByCustomer(customerId, limit, page, start, end, orderId, storeId, storeGroupId, userId, userEmail, userName, voucherCode, eventType, flipdishEventId);
            //Assert.IsInstanceOf<RestApiEventSearchPaginationResult> (response, "response is RestApiEventSearchPaginationResult");
        }
        
        /// <summary>
        /// Test GetStoreEvents
        /// </summary>
        [Test]
        public void GetStoreEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? storeId = null;
            //int? limit = null;
            //int? page = null;
            //DateTime? start = null;
            //DateTime? end = null;
            //int? orderId = null;
            //int? storeId2 = null;
            //int? storeGroupId = null;
            //int? userId = null;
            //string userEmail = null;
            //string userName = null;
            //string voucherCode = null;
            //List<string> eventType = null;
            //string flipdishEventId = null;
            //var response = instance.GetStoreEvents(storeId, limit, page, start, end, orderId, storeId2, storeGroupId, userId, userEmail, userName, voucherCode, eventType, flipdishEventId);
            //Assert.IsInstanceOf<RestApiEventSearchPaginationResult> (response, "response is RestApiEventSearchPaginationResult");
        }
        
        /// <summary>
        /// Test GetUserEvents
        /// </summary>
        [Test]
        public void GetUserEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? userId = null;
            //int? limit = null;
            //int? page = null;
            //DateTime? start = null;
            //DateTime? end = null;
            //int? orderId = null;
            //int? storeId = null;
            //int? storeGroupId = null;
            //int? userId2 = null;
            //string userEmail = null;
            //string userName = null;
            //string voucherCode = null;
            //List<string> eventType = null;
            //string flipdishEventId = null;
            //var response = instance.GetUserEvents(userId, limit, page, start, end, orderId, storeId, storeGroupId, userId2, userEmail, userName, voucherCode, eventType, flipdishEventId);
            //Assert.IsInstanceOf<RestApiEventSearchPaginationResult> (response, "response is RestApiEventSearchPaginationResult");
        }
        
        /// <summary>
        /// Test GetWhiteLabelEvents
        /// </summary>
        [Test]
        public void GetWhiteLabelEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? whitelabelId = null;
            //int? limit = null;
            //int? page = null;
            //DateTime? start = null;
            //DateTime? end = null;
            //int? orderId = null;
            //int? storeId = null;
            //int? storeGroupId = null;
            //int? userId = null;
            //string userEmail = null;
            //string userName = null;
            //string voucherCode = null;
            //List<string> eventType = null;
            //string flipdishEventId = null;
            //var response = instance.GetWhiteLabelEvents(whitelabelId, limit, page, start, end, orderId, storeId, storeGroupId, userId, userEmail, userName, voucherCode, eventType, flipdishEventId);
            //Assert.IsInstanceOf<RestApiEventSearchPaginationResult> (response, "response is RestApiEventSearchPaginationResult");
        }
        
    }

}
